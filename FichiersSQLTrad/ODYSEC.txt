/* AJOUT DES TRANSFERT DE SERIES SANS CALCUL ENTRE COLLECTE ET CALCUL */
CALC_DATA.Affectation_Serie('djrefcomp','djrefcomp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('djcomp','djcomp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('djclicomp','djclicomp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('djrefclicomp','djrefclicomp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actagr','actagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actcar','actcar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actfin','actfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actgoods','actgoods',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actind','actind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actpass','actpass',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actpasstot','actpasstot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actres','actres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actreschf','actreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actter','actter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('acttra','acttra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('acttratot','acttratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('climfin','climfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('climfint','climfint',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('climres','climres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('climreschf','climreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('climter','climter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcffal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfbla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcffal','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscffal','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcffal','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcffal','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccffal','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consagr','consagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('conscar','conscar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consdiv','consdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consfin','consfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consfin2','consfin2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consfint','consfint',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consfint2','consfint2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consgoods','consgoods',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consind','consind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('conspass','conspass',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('conspasstot','conspasstot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('conspow','conspow',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consprim','consprim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consprim2','consprim2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consprim2cc','consprim2cc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consprimcc','consprimcc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consres','consres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consres2','consres2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consreschc','consreschc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consreschf','consreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consresels','consresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('conster','conster',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('conster2','conster2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('constra','constra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('constratot','constratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csbus','csbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csbusess','csbusess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csbusgna','csbusgna',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csbusgpl','csbusgpl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csbusgzl','csbusgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvlr','csvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvlrgna','csvlrgna',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cscam','cscam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cscamess','cscamess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cscamgna','cscamgna',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cscamgzl','cscamgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cscamvlress','cscamvlress',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cscamvlrgpl','cscamvlrgpl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cscamvlrgzl','cscamvlrgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvbus','kmvbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvcam','kmvcam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvcamvlr','kmvcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvmot','kmvmot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvvlr','kmvvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvvpc','kmvvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvvpcess','kmvvpcess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('kmvvpcgzl','kmvvpcgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsagr','varconsagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconscar','varconscar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsdiv','varconsdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsfin','varconsfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsfin2','varconsfin2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsfint','varconsfint',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsfint2','varconsfint2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsgoods','varconsgoods',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsind','varconsind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconspass','varconspass',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconspasstot','varconspasstot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconspow','varconspow',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsprim','varconsprim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsprim2','varconsprim2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsprim2cc','varconsprim2cc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsprimcc','varconsprimcc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsres','varconsres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsres2','varconsres2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsreschc','varconsreschc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsreschf','varconsreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsresels','varconsresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconster','varconster',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconster2','varconster2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconstra','varconstra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconstratot','varconstratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('vareleimports','vareleimports',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('dj','dj',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('djref','djref',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('djcli','djcli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('djrefcli','djrefcli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcairint','pcairint',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('lifeapplres','lifeapplres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('lifefin','lifefin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('lifehomeres','lifehomeres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('lifehomerescentchf','lifehomerescentchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('lifehomereschf','lifehomereschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('lifehomeresels','lifehomeresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('mixren','mixren',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbbeds','nbbeds',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbbuildclassA','nbbuildclassA',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbbuildclassB','nbbuildclassB',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbdwref','nbdwref',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbepc','nbepc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nblowbuild','nblowbuild',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbmencfl1','nbmencfl1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbpersni','nbpersni',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbpupil','nbpupil',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrcgl','nbrcgl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrcli','nbrcli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrcold','nbrcold',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrfrm','nbrfrm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlvl','nbrlvl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlvv','nbrlvv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrrfg','nbrrfg',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrscl','nbrscl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrtvs','nbrtvs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbripr','nbripr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbriprboi','nbriprboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbriprcms','nbriprcms',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbriprele','nbriprele',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbriprgaz','nbriprgaz',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbriprpet','nbriprpet',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbriprvap','nbriprvap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--IF pays_cour IN ('pol') THEN
--ELSE
	CALC_DATA.Affectation_Serie('nbrlpr','nbrlpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;

CALC_DATA.Affectation_Serie('nbrlprboi','nbrlprboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlprcms','nbrlprcms',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlprele','nbrlprele',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlprgaz','nbrlprgaz',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlprpet','nbrlprpet',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlprvap','nbrlprvap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmpr','nbrmpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmprboi','nbrmprboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmprcms','nbrmprcms',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmprele','nbrmprele',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmprgaz','nbrmprgaz',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmprpet','nbrmprpet',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmprvap','nbrmprvap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlc','nbrlc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrmi','nbrmi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrlog','nbrlog',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrres','nbrres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexind','odexind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexindobs','odexindobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexman','odexman',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexmanobs','odexmanobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexres','odexres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexrescui','odexrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexreschf','odexreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexresecs','odexresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexresels','odexresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexresobs','odexresobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexter','odexter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexterobs','odexterobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextot','odextot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextottot','odextottot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextottotobs','odextottotobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextotobs','odextotobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextra','odextra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextraobs','odextraobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextratot','odextratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odextratotobs','odextratotobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdacb','prdacb',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdacbele','prdacbele',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdacboxy','prdacboxy',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdacl','prdacl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdalupre','prdalupre',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdalusec','prdalusec',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdamm','prdamm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdcim','prdcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdclk','prdclk',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdety','prdety',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdfal','prdfal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdpap','prdpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdpat','prdpat',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdpatchi','prdpatchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdpatmec','prdpatmec',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdsug','prdsug',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdver','prdver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdverbot','prdverbot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prdverfla','prdverfla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('solm2','solm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('solm2an','solm2an',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('txchgeuro','txchgeuro',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('txchgppp','txchgppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pop','pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empagr','empagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empbup','empbup',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empbur','empbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empcom','empcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empedu','empedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empgov','empgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('emphcr','emphcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('emphos','emphos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empdiv','empdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('empter','empter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('men','men',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cselecgl','cselecgl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cselelvl','cselelvl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cselelvv','cselelvv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cselerfg','cselerfg',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cseletvs','cseletvs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour NOT IN ('nld') THEN
	CALC_DATA.Affectation_Serie('nbrlprccc','nbrlprccc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('nbrlprcci','nbrlprcci',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('nbrlprcdi','nbrlprcdi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
--IF pays_cour NOT IN ('rcz','rom') THEN
	CALC_DATA.Affectation_Serie('csvpc','csvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('csvpcgzl','csvpcgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('csvpcess','csvpcess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('csvpcgna','csvpcgna',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
CALC_DATA.Affectation_Serie('pcchfrescc','pcchfrescc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcchftercc','pcchftercc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcchfelerescc','pcchfelerescc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcchfelecc','pcchfelecc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('elecfreslar','elecfreslar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pasflv','pasflv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcethess','pcethess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcbiogzl','pcbiogzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pkmnmt','pkmnmt',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrled','nbrled',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcled','pcled',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcmenled','pcmenled',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('geocfreschf','geocfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('solcfreschf','solcfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('paccfreschf','paccfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('boicfreschf','boicfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('gbicfreschf','gbicfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('wascfreschf','wascfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('geocfresecs','geocfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('solcfresecs','solcfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('paccfresecs','paccfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('boicfresecs','boicfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('gbicfresecs','gbicfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('paccf','paccf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

/* FIN AJOUT */


DBMS_OUTPUT.PUT_LINE('Début CALCULS');
/* DONNEES ECONOMIQUES */					 
CALC_ECO.Calcul_Series_LC_EURO('pib','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('cpr','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadagr','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadboi','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadchi','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadcmp','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadcon','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadegw','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadfab','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadiaa','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadidv','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadind','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmac','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadman','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmin','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmnm','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmpr','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadpap','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadppp','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadref','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadter','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadtex','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadveh','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadidc','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadeqp','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_ECO.Calcul_Serie_Base('pibxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('cprxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Value added at constant prices;
CALC_ECO.Calcul_Serie_Base('vadagrxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadindxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadterxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadminxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmanxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadiaaxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadtexxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadboixx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadpppxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadpapxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadrefxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadchixx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmnmxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmprxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmacxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadfabxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadvehxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadidvxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadcmpxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadegwxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('vadenexx','vadegwxx','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadconxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('vadimaxx','vadmanxx','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadidcxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadeqpxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

DBMS_OUTPUT.PUT_LINE('Suite CALCULS');

CALC_ECO.Calcul_Serie_Base('pibxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('cprxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadagrxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadindxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadterxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadminxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmanxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadiaaxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadtexxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadboixxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadpppxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadpapxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadrefxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadchixxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmnmxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmprxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadmacxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadfabxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadvehxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadidvxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadcmpxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadegwxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadenexxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadconxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('vadimaxxppp','vadmanxxppp','MEUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadidcxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadeqpxxppp','txchgppp','MEUR2010p',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

DBMS_OUTPUT.PUT_LINE('Début IPI CALCULS');
--coment : Production index;
CALC_ECO.Calcul_Ratio_base_100('ipiindxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipiminxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipimanxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipiiaaxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipitexxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipiboixx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipipppxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipipapxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipichixx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipimnmxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipimprxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipimacxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipifabxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipivehxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipiidvxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipicmpxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Ratio_base_100('ipiconxx','2010=100',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

DBMS_OUTPUT.PUT_LINE('Début TEP');
--coment : Total energy consumption;
CALC_DATA.Calcul_Serie_TEP('cmscp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('othcp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('enupd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ehypd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('eeopd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('edvpd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour IN ('fra','ita','aut','rfa','swe','nld','irl','grc','dnk','nor','fin','prt','esp','bel') THEN
	CALC_DATA.Calcul_Serie_TEP('eleimex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Affectation_Serie_DIV_UNIT('eleimex','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_DATA.Calcul_Serie_TEP('solpd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOCCP('toccp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--procédure modifiée avec paccf, inclure un vapcp plus large plus tard

--coment : Final energy consumption by sector;
CALC_DATA.Calcul_Serie_TEP('petcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cmscfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('petcfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cmscfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfret',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('petcfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cmscfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfres1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfres2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('petcfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cmscfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('petcfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cmscfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfdvr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('petcftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('esscftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cmscftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfind','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcftra','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfret','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfres','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfagr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfdvr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfind','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccftra','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfret','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfres','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfagr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfdvr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVEN('elccf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVEN('gazcf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVEN('cmscf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVEN('petcf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVEN('vapcf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVEN('enccf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('toccf','toccf','paccf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

DBMS_OUTPUT.PUT_LINE('Début industrie');
--coment : Energy consumption by branch;
CALC_DATA.Calcul_Serie_TEP('elccfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccftex',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfboi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfpap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfmnm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('elccfsid1','elccfsid','elccfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('gnacfsid1','gnacfsid','gnacfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('gadcfsid1','gadcfsid','gadcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('gzlcfsid1','gzlcfsid','gzlcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('folcfsid1','folcfsid','folcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('pdvcfsid1','pdvcfsid','pdvcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('chacfsid1','chacfsid','chacfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('ligcfsid1','ligcfsid','ligcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('cokcfsid1','cokcfsid','cokcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('osfcfsid1','osfcfsid','osfcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('vapcfsid1','vapcfsid','vapcfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('enccfsid1','enccfsid','enccfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('elecfsid1','elecfsid','elecfbla','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfmnf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccffab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfidv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfcmp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfmin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfver',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gadcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('pdvcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cokcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('osfcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfalu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfwat',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfiaa','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfiaa','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfiaa','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfiaa','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfiaa','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcftex','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscftex','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcftex','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcftex','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccftex','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfboi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfboi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfboi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfboi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfboi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfppp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfppp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfppp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfppp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfppp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfpap','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfpap','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfpap','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfpap','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfpap','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfchi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfchi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfchi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfchi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfchi','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfmnm','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfmnm','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfmnm','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfmnm','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmnm','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfsid','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfsid','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfsid','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfsid','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfsid','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfsid1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfsid1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfsid1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfsid1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfsid1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfmnf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfmnf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfmnf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfmnf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmnf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMPR('elccfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMPR('vapcfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMPR('gazcfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMPR('petcfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMPR('cmscfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMPR('enccfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMPR('cmbcfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmpr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcffab','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscffab','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcffab','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcffab','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccffab','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfveh','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfveh','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfveh','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfveh','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfveh','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfidv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfidv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfidv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfidv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfidv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfcmp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfcmp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfcmp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfcmp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfcmp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfmin','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfmin','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfmin','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfmin','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmin','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfcon','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfcon','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfcon','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfcon','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfcon','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfcim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfcim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfcim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfcim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--Cas particulier pour l'UE27: On recupere le total car le detail par energie n'existe pas
IF pays_cour in ('ueur','ueur28') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfcim','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfcim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfver','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfver','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfver','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfver','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfver','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfalu','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfalu','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfalu','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfalu','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfalu','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : manufacturing energy consumption;
IF pays_cour IN ('mlt') THEN
	CALC_DATA.Calcul_Serie_TEP('chacfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('ligcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('cokcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('osfcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gnacfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gadcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gzlcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('folcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('pdvcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('vapcfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('enccfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elccfima',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('chacfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('ligcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('cokcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('osfcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('gnacfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('gadcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('gzlcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('folcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('pdvcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('vapcfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('enccfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFIMA('elccfim','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfima','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfima','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfima','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfima','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfima','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Specific Consumption by industrial process;
IF pays_cour IN ('aut','rfa','bel','nor','sui','lat') THEN
	CALC_DATA.Calcul_Serie_TEP('cmbcsacboxy',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('cmbcsacbele',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elecsacboxy',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elecsacbele',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

	CALC_DATA.Calcul_Serie_TEP('toccscim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	
	CALC_DATA.Calcul_Serie_TEP('toccsclk',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	
	CALC_DATA.Calcul_Serie_TEP('cmbcspap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elecspap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

	CALC_DATA.Calcul_Serie_TEP('cmbcsverfla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elecsverfla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	
	CALC_DATA.Calcul_Serie_TEP('cmbcsverbot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elecsverbot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	
	CALC_DATA.Calcul_Serie_TEP('cmbcssug',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elecssug',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

DBMS_OUTPUT.PUT_LINE('Début transport');
--coment : TRANSPORT;
--coment : Stock of transport vehicles;
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpc','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpcess','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpcgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpcgpl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpcele','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpchyb','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpcgna','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpcflex','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpc1','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpc2','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvpc3','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie_DIV_UNIT('newvpc','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpcess','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpcgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpcgpl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpcele','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpchyb','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpcgna','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpcflex','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpc1','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpc2','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpc3','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpc130','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpc115','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvpc95','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie_DIV_UNIT('nbrmot','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newmot','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvlr','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvlress','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvlrgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvlrele','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvlrgna','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvlrhyb','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrvlrxxx','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvlr','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvlress','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvlrgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvlrele','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvlrgna','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvlrhyb','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newvlrxxx','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcam','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcam1','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcam2','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcam3','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcamess','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcamgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcamxxx','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newcam','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newcam1','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newcam2','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newcam3','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newcamess','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newcamgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newcamxxx','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie_DIV_UNIT('nbrbus','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrbusess','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrbusgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrbusele','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrbusgna','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrbushyb','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('nbrbusxxx','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newbus','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newbusess','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newbusgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newbusele','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newbusgna','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newbushyb','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('newbusxxx','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series@remote_sodyssee WHERE code_serie='nbrcamvlr' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcamvlr','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_PRODUIT.Calcul_Serie_NBRCAMVLR('nbrcamvlr','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(*) INTO serie_existe FROM series@remote_sodyssee WHERE code_serie='nbrcamvlress' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcamvlress','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_PRODUIT.Calcul_Serie_NBRCAMVLR('nbrcamvlress','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(*) INTO serie_existe FROM series@remote_sodyssee WHERE code_serie='nbrcamvlrgzl' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('nbrcamvlrgzl','k',1000,'M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	IF pays_cour IN ('rsl') THEN
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('nbrcamgzl','nbrcam','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_AGREGAT_PRODUIT.Calcul_Serie_NBRCAMVLR('nbrcamvlrgzl','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment: traffic in veh-km;
IF pays_cour IN ('prt') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmvpc','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmvpcess','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmvpcgzl','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmmot','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmvlr','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmcam','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmcamvlr','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('vkmbus','kvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	/*IF pays_cour IN ('aus','can','cor','jpn','nzl','usa') THEN
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmvpc','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmvpcess','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmvpcgzl','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmmot','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmvlr','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmcam','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmcamvlr','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_MULT_UNIT('vkmbus','Gvkm',1000,'Mvkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE*/
		CALC_DATA.Affectation_Serie('vkmvpc','vkmvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('vkmvpcess','vkmvpcess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('vkmvpcgzl','vkmvpcgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('vkmmot','vkmmot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('vkmvlr','vkmvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('vkmcam','vkmcam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('vkmcamvlr','vkmcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('vkmbus','vkmbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--	END IF;
END IF;

--coment : Passenger traffic in passenger-km;
CALC_DATA.Affectation_Serie_DIV_UNIT('pkmvpc','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('pkmmot','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('pkmfer','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('pkmfermet','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('pkmbus','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('pkmavd','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('pkmflv','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pkmfermet' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_PKMFERTOT('pkmfertot','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pkmfer' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('pkmfertot','pkmfer','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_DATA.Affectation_Serie_DIV_UNIT('pkmfertot','Mpkm',1000,'Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;
IF pays_cour IN ('pol','eso','esp') THEN
	CALC_DATA.Affectation_Serie_MULT_UNIT('pasair','M',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Affectation_Serie('pasair','pasair',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pkmvpc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_PKMROU('pkmrou','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('pkmrou','pkmfertot') AND code_pays=pays_cour;
IF serie_existe=2 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_PKM('pkm','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
--Calcul pkmter (pkm terrestre = passager km hors avion)
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('pkmrou','pkmfertot') AND code_pays=pays_cour;
IF serie_existe=2 THEN
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('pkmter','pkmrou','pkmfertot','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Traffic of goods in ton-km;
CALC_DATA.Affectation_Serie_DIV_UNIT('tkmfer','Mtkm',1000,'Gtkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('tkmrou','Mtkm',1000,'Gtkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie_DIV_UNIT('tkmflv','Mtkm',1000,'Gtkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TKBR('tkbferpas','pkmfertot','cst_tkbrpkm','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TKBR('tkbfermch','tkmfer','cst_tkbrtkm','Gtkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('tkbfer','tkbferpas','tkbfermch','Gtkb',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

IF pays_cour IN ('cyp','mlt') THEN
	SELECT COUNT(DISTINCT(Code_Serie)) INTO serie_existe FROM Series WHERE code_serie='tkmrou' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('tkm','tkmrou','tkmflv','Gtkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
ELSE
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('tkmrou','tkmfer') AND Code_pays=pays_cour;
	IF serie_existe=2 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_TKM('tkm','Gtkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

--coment : Road transport energy consumption;
CALC_DATA.Calcul_Serie_TEP('esscfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('glecfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('glgcfrou',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Rail transport;
CALC_DATA.Calcul_Serie_TEP('gzlcffer',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcffer',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccffer',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Domestic water transport; (flv=flv+mar)
CALC_DATA.Calcul_Serie_TEP('esscfflv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_FLVTEP('gzlcfflv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_FLVTEP('folcfflv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Cars;
--IF pays_cour NOT IN ('mlt') THEN
	CALC_DATA.Calcul_Serie_TEP('esscfvpctot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gzlcfvpctot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('esscfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gzlcfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gplcfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gnacfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('enccfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('glecfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('glgcfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elccfvpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--FGB ajout 09/2021
--END IF;
--coment : Motorcycles;
CALC_DATA.Calcul_Serie_TEP('esscfmot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Buses;
CALC_DATA.Calcul_Serie_TEP('gnacfbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('esscfbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Trucks;
CALC_DATA.Calcul_Serie_TEP('gnacfcam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('esscfcam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfcam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfcam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfcam',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Light duty vehicles;
CALC_DATA.Calcul_Serie_TEP('esscfvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Trucks and light vehicles;
CALC_DATA.Calcul_Serie_TEP('gzlcfcamvlrtot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('esscfcamvlrtot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('esscfcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gnacfcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('glecfcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('glgcfcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment: fuel consumption of foreign vehicles and border trade;
CALC_DATA.Calcul_Serie_TEP('esscfvpcfor',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfvpcfor',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfcamfor',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gzlcfroufor',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--Road transport (without foreign vehicles, border trade)
--IF pays_cour NOT IN ('rsl') THEN
	CALC_DATA.Calcul_Serie_TEP('esscfroudom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gzlcfroudom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gplcfroudom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('gnacfroudom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('enccfroudom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_TEP('elccfroudom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;

/*
IF pays_cour IN ('mlt') THEN
	DELETE ETAB_UTIL WHERE code_serie='gplcfvpctot';
END IF;
*/

--coment : Rail transport;
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcffer','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcffer','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccffer','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : International Air transport;
CALC_DATA.Calcul_Serie_TEP('toccfain',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Domestic Air transport;
CALC_DATA.Calcul_Serie_TEP('esacfair',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('esacfado','esacfair','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series@remote_sodyssee WHERE code_serie='carcfado' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_DATA.Calcul_Serie_TOCCFADO('toccfado','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Difference_2Series_ODY('carcfado','toccfado','esacfado','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Calcul_Serie_TEP('carcfado',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfado','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfado','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfado','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Total Air transport;
CALC_INDICATEURS.Somme_2Series_ODY('carcfair','carcfado','toccfain','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfair','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfair','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfair','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Domestic water transport;
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfflv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfflv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfflv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='toccfflv' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_DATA.Calcul_Serie_TEP('toccfflv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
--calcul_series('toccfmar=gzlcfmar+folcfmar');
--coment : Cars;
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfvpc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
/* Correction 21 novembre pour enlever le double compte ENC */
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfvpc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfvpc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfvpc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Motorcycles;
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfmot','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfmot','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmot','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Buses;
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfbus','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfbus','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfbus','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfbus','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Trucks;
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfcam','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfcam','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfcam','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfcam','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Light duty vehicles;
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Trucks and light vehicles;
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfcamvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
/* Correction 21 novembre pour enlever le double compte ENC */
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfcamvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfcamvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfcamvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--Road transport (without foreign vehicles, border trade)
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='esscfroudom' AND code_pays=pays_cour;
IF serie_existe=0 THEN
/* Correction 21 novembre pour enlever le double compte ENC */
--	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='esscfvpctot' AND code_pays=pays_cour;
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='esscfvpc' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('esscfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('esscfroudom','esscfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='esscfvpctot' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('esscfroudomtot','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('esscfroudomtot','esscfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gzlcfroudom' AND code_pays=pays_cour;
IF serie_existe=0 THEN
/* Correction 21 novembre pour enlever le double compte ENC */
--	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gzlcfvpctot' AND code_pays=pays_cour;
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gzlcfvpc' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('gzlcfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('gzlcfroudom','gzlcfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gzlcfvpctot' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('gzlcfroudomtot','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('gzlcfroudomtot','gzlcfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gplcfroudom' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gplcfvpc' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('gplcfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('gplcfroudom','gplcfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='enccfroudom' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='enccfvpc' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('enccfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('enccfroudom','enccfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gnacfroudom' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gnacfvpc' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('gnacfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('gnacfroudom','gnacfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='elccfroudom' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='elccfvpc' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('elccfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('elccfroudom','elccfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='toccfroudom' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('toccfvpc','toccfcamvlr') AND code_pays=pays_cour;
	IF serie_existe=2 THEN
		CALC_AGREGAT_PRODUIT.Calcul_Serie_CFROUDOM('toccfroudom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('toccfroudom','toccfrou','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_DATA.Calcul_Serie_CFFERxxx('gzlcffermch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFFERxxx('folcffermch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFFERxxx('elccffermch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMCH('esscfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMCH('folcfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMCH('gnacfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='toccfcamvlr' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFMCH('gzlcfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('elccfmch','elccffermch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_DATA.Calcul_Serie_CFFERxxx('gzlcfferpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFFERxxx('folcfferpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFFERxxx('elccfferpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfferpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfferpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfferpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFFERMCH('toccffermch','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

/* Correction 21 novembre pour enlever le double compte ENC */
--SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='esscfvpctot' AND code_pays=pays_cour;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='esscfvpc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('esscfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--ELSE
END IF;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='esscfvpctot' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('esscfpastot','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='gzlcfvpctot' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('gzlcfpastot','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('enccfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('gnacfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('gzlcfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('gplcfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('carcfpas','carcfado','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFPAS('elccfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_GAZ('gazcfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('esscfpas','gzlcfpas') AND code_pays=pays_cour;
IF serie_existe=2 THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='toccfvpc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfpas','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFTRADOM('toccftradom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_VPCUN('vpcun','koe/l',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='kmvvpc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_DATA.Calcul_Serie_CSVPCVKM('csvpcvkm','l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
	
-- On ne calcule pas csvpc pour RSL (A voir à la prochaine MAJ)
--IF pays_cour NOT IN ('rsl','rom','rcz') THEN
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='csvpc' AND code_pays=pays_cour;
	IF serie_existe=0 THEN
		CALC_INDICATEURS.Calcul_Moy_pond('csvpc','csvpcess','csvpcgzl','nbrvpcess','nbrvpcgzl','l/100km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='csvpc' AND code_pays=pays_cour;
	IF serie_existe=0 THEN
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('csvpc','csvpcvkm','l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
--END IF;

--coment : unit consumption of gasoline cars;
CALC_INDICATEURS.Calcul_Ratio('cuessvpc','esscfvpctot','nbrvpcess','toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour NOT IN ('rcz','rom') THEN
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='csvpcess' AND code_pays=pays_cour;
	IF serie_existe=0 THEN
		CALC_DATA.Calcul_Serie_CSVPCxxx('csvpcess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
--END IF;

--coment : unit consumption of diesel cars;
IF pays_cour NOT IN ('usa','grc') THEN
	CALC_INDICATEURS.Calcul_Ratio('cugzlvpc','gzlcfvpctot','nbrvpcgzl','toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
--IF pays_cour NOT IN ('rcz','rsl','gbr','rom') THEN
	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='csvpcgzl' AND code_pays=pays_cour;
	IF serie_existe=0 THEN
		CALC_DATA.Calcul_Serie_CSVPCxxx('csvpcgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
--END IF;
	
--coment : unit consumption of LPG cars;
CALC_INDICATEURS.Calcul_Ratio('cugplvpc','gplcfvpc','nbrvpcgpl','toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : HOUSEHOLDS SECTOR;
--coment : households consumption with climatic corrections;
CALC_DATA.Calcul_Corr_Clim('cmscfres','pcchfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('petcfres','pcchfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('gazcfres','pcchfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('vapcfres','pcchfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('enccfres','pcchfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Other electrical consumption of households;
CALC_DATA.Calcul_Serie_TEP('elccfreslgt',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfrescli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfreslar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfreslgt',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfrescli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfrescli','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='elccfreslgt' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRESELS1('elccfresels1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('pcclieleres','elccfrescli','elccfres',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pcchfelerescc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_DATA.Calcul_Corr_Clim('elccfres','pcchfelerescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
--	SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pcchfeleres' AND code_pays=pays_cour;
--	IF serie_existe>0 THEN
--	ELSE
		CALC_DATA.Calcul_Corr_Clim('elccfres','pcchfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--	END IF;
END IF;
CALC_DATA.Calcul_Serie_ELE('elecfrescc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour NOT IN ('gbr') THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfrescc','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;


--coment : services consumption with climatic corrections;
-- SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pcchfelecc' AND code_pays=pays_cour;
-- IF serie_existe=0 THEN
-- END IF;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pcchfelecc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_DATA.Calcul_Corr_Clim('elccfdvr','pcchfelecc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Calcul_Corr_Clim('elccfdvr','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_DATA.Calcul_Corr_Clim('cmscfdvr','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('petcfdvr','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('gazcfdvr','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('vapcfdvr','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('enccfdvr','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('solcfdvr','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfdvrcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour NOT IN ('gbr') THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfdvrcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfdvrcc','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_DATA.Calcul_Serie_ELE('elecfdvrcc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRETCC('cmscfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRETCC('petcfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRETCC('gazcfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRETCC('vapcfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRETCC('enccfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRETCC('elccfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfretcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVENCC('cmscfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVENCC('petcfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVENCC('gazcfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVENCC('vapcfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVENCC('enccfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVENCC('elccfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfcc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_CICC('toccp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Stock of dwellings/construction;
SELECT COUNT(Code_serie) INTO serie_existe FROM Series WHERE code_serie='men' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_DATA.Affectation_Serie('men','nbrlpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--IF pays_cour IN ('lux','gbr') THEN
--ELSE
	CALC_DATA.Affectation_Serie('nbrlpn','nbrlpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('nbrmpn','nbrmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('nbripn','nbripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;

/*
IF pays_cour IN ('nld') THEN --à corriger template
	calcul_series('nbrlprccc=nbrlprccc/100*nbrlpr');
	calcul_series('nbrlprcci=nbrlprcci/100*nbrlpr');
	calcul_series('nbrlprcdi=nbrlprcdi/100*nbrlpr');
END IF;
*/

--coment : Dwelling size;
/*
IF pays_cour='hun' THEN
	calcul_series('surlpn=surlpn/nbrlpn*1000');
	calcul_series('suripn=suripn/nbripn*1000');
	calcul_series('surmpn=surmpn/nbrmpn*1000');
END IF;
*/
CALC_DATA.Affectation_Serie('surlpn','surlpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('suripn','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('surmpn','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Equipment ownership ratios;
--In ne fait plus de cas particulier pour gbr
--IF pays_cour='gbr' THEN
--	calcul_series('teqrfg=(nbrrfg+nbrrfg2)/nbrlpr*100');
--END IF;

CALC_INDICATEURS.Calcul_Serie_PC('teqrfgmult','nbrrfg','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_PC('teqcglmult','nbrcgl','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_PC('teqlvlmult','nbrlvl','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_PC('teqlvvmult','nbrlvv','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_PC('teqsclmult','nbrscl','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_PC('teqfrmmult','nbrfrm','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_PC('teqclimult','nbrcli','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_PC('teqtvsmult','nbrtvs','men','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Annual Sales of electrical appliances ;
/*IF pays_cour='nld' THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('newrfg','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newrfg1','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newrfg2','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newcgl','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newcold','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newlvl','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newlvv','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newtvs','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newscl','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newfrm','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newcli','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newset','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newpc','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newdesk','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('newlap','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE*/
	CALC_DATA.Affectation_Serie('newrfg','newrfg',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newrfg1','newrfg1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newrfg2','newrfg2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newcgl','newcgl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newcold','newcold',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newlvl','newlvl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newlvv','newlvv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newtvs','newtvs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newscl','newscl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newfrm','newfrm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newcli','newcli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newset','newset',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newpc','newpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newdesk','newdesk',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('newlap','newlap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;

--coment : Sales of electrical appliances by label class;
CALC_DATA.Affectation_Serie('pcgla','pcgla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Specif consumption of electrical appliances;
CALC_DATA.Calcul_Serie_CFAppELS('elecfcgl','GWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFAppELS('elecfrfg','GWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFAppELS('elecflvl','GWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFAppELS('elecflvv','GWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_CFAppELS('elecftvs','GWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Household space heating consumption;
CALC_DATA.Calcul_Serie_TEP('gplcfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour in ('ueur','ueur28','nor') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfreschf','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : space heating consumption with climatic corrections;
CALC_DATA.Calcul_Corr_Clim_Chf('cmscfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('petcfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('gazcfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('vapcfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('enccfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('elccfreschf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfreschc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour IN ('gbr') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfreschc','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfreschc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Household water heating;
CALC_DATA.Calcul_Serie_TEP('gplcfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfresecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfresecs','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfresecs','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfresecs','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour in ('ueur','ueur28','nor') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfresecs','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfresecs','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Household cooking;
CALC_DATA.Calcul_Serie_TEP('gplcfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfrescui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfrescui','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfrescui','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfrescui','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour in ('ueur','ueur28') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfrescui','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfrescui','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Specific consumption of new dwellings;
IF pays_cour IN ('nld','nor') THEN
	CALC_DATA.Calcul_Serie_CS_TEP('csmpncht','csmpncht',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_CS_TEP('csipncht','csipncht',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_CS_TEP('cscmbmpncht','cscmbmpncht',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_CS_TEP('cselempncht','cselempncht',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_CS_TEP('cscmbipncht','cscmbipncht',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_CS_TEP('cseleipncht','cseleipncht',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	IF pays_cour IN ('swe') THEN
		CALC_DATA.Affectation_Serie('csmpncht','csmpncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('csipncht','csipncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cscmbmpncht','cscmbmpncht','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cselempncht','cselempncht','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cscmbipncht','cscmbipncht','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cseleipncht','cseleipncht','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		IF pays_cour IN ('rfa','fin','aut','dnk','lat','prt') THEN
			CALC_DATA.Calcul_Serie_CS_TEP('csmpncht','csmpncht','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('csipncht','csipncht','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('cscmbmpncht','cscmbmpncht','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('cselempncht','cselempncht','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('cscmbipncht','cscmbipncht','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('cseleipncht','cseleipncht','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		ELSE
			CALC_DATA.Affectation_Serie('csmpncht','csmpncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie('csipncht','csipncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie('cscmbmpncht','cscmbmpncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie('cselempncht','cselempncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie('cscmbipncht','cscmbipncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie('cseleipncht','cseleipncht',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	END IF;
END IF;

--coment : energy efficiency in existing dwellings;
/*IF pays_cour='swe' THEN
	CALC_DATA.Affectation_Serie_MULT_UNIT('salcfl','M',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_MULT_UNIT('salcflres','M',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	IF pays_cour IN ('pol','eso','cro','rsl','hun','rom','slo','fra') THEN
		CALC_DATA.Affectation_Serie_DIV_UNIT('salcfl','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('salcflres','1',1000,'k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_DATA.Affectation_Serie('salcfl','salcfl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('salcflres','salcflres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;*/

/*
CALC_DATA.Calcul_Serie_TEP('chacfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
*/
CALC_DATA.Calcul_Serie_TEP('elecfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
/*
CALC_DATA.Calcul_Serie_TEP('vapcfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('boicfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gplcfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
*/
CALC_DATA.Calcul_Serie_TEP('elecfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--incohérence unité/code
/*
CALC_DATA.Calcul_Serie_TEP('vapcfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('boicfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('enccfmprchf','enccfmprchf','boicfmprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('enccfiprchf','enccfiprchf','boicfiprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfiprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfiprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfiprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfmprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfmprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfmprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
*/
CALC_DATA.Calcul_Serie_TEP('cmbcfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('cmbcfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfiprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfmprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='toccfiprchf' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_DATA.Calcul_Serie_TEP('toccfiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='toccfmprchf' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_DATA.Calcul_Serie_TEP('toccfmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Specific consumption by type of dwelling;
IF pays_cour IN ('prt') THEN
	DBMS_OUTPUT.PUT_LINE('NON traduit car potentiellement erreur');
/*
	calcul_series('cscmbmprchf=cscmbmprchf*0,09/cst_tclun/10/1000');
	calcul_series('cselemprchf=cselemprchf*0,09/cst_tclun/10/1000');
	calcul_series('cscmbiprchf=cscmbiprchf*0,09/cst_tclun/10/1000');
	calcul_series('cseleiprchf=cseleiprchf*0,09/cst_tclun/10/1000');
	calcul_series('csmprchf=csmprchf*0,09/cst_tclun/10/1000');
	calcul_series('csiprchf=csiprchf*0,09/cst_tclun/10/1000');
	calcul_series('cslogccc=cslogccc*0,09/cst_tclun/10/1000');
	calcul_series('cslogcci=cslogcci*0,09/cst_tclun/10/1000');
	calcul_series('cslogcdi=cslogcdi*0,09/cst_tclun/10/1000');
*/
	CALC_DATA.Calcul_Serie_CS_TEP('cslogccc','cslogccc',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_CS_TEP('cslogcci','cslogcci',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Serie_CS_TEP('cslogcdi','cslogcdi',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	IF pays_cour IN ('aut','rfa','nld') THEN
		CALC_DATA.Calcul_Serie_CS_TEP('cscmbmprchf','cscmbmprchf','surmpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cselemprchf','cselemprchf','surmpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cscmbiprchf','cscmbiprchf','suripr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cseleiprchf','cseleiprchf','suripr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('csmprchf','csmprchf','surmpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('csiprchf','csiprchf','suripr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cslogccc','cslogccc',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cslogcci','cslogcci',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_CS_TEP('cslogcdi','cslogcdi',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		IF pays_cour IN ('cyp') THEN
			CALC_DATA.Calcul_Serie_CS_TEP('cscmbmprchf','cscmbmprchf','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('cselemprchf','cselemprchf','surmpn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('cscmbiprchf','cscmbiprchf','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Calcul_Serie_CS_TEP('cseleiprchf','cseleiprchf','suripn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		ELSE
			IF pays_cour IN ('ita') THEN
				CALC_DATA.Calcul_Serie_CS_TEP('cselemprchf','cselemprchf',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
				CALC_DATA.Calcul_Serie_CS_TEP('cseleiprchf','cseleiprchf',NULL,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			ELSE
				CALC_DATA.Affectation_Serie('cscmbmprchf','cscmbmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
				CALC_DATA.Affectation_Serie('cselemprchf','cselemprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
				CALC_DATA.Affectation_Serie('cscmbiprchf','cscmbiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
				CALC_DATA.Affectation_Serie('cseleiprchf','cseleiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			END IF;
		END IF;
		CALC_DATA.Affectation_Serie('csmprchf','csmprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('csiprchf','csiprchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('cslogccc','cslogccc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('cslogcci','cslogcci',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('cslogcdi','cslogcdi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_DATA.Calcul_Serie_TEP('gplcfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('holcfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('folcfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('chacfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('ligcfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('toucfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMS('cmscfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='cmscfter' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_DATA.Calcul_Serie_TEP('cmscfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_ENERGIE.Calcul_Serie_PET('petcfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='petcfter' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_DATA.Calcul_Serie_TEP('petcfter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour in ('ueur','ueur28') THEN
--ELSE
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;

CALC_DATA.Calcul_Corr_Clim('cmscfter','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('petcfter','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('gazcfter','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('vapcfter','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('enccfter','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim('solcfter','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_ELE('elecfterchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='pcchfelecc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_DATA.Calcul_Corr_Clim('elccfter','pcchfelecc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Calcul_Corr_Clim('elccfter','pcchftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecftercc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccftercli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcclieleter','elccftercli','elccfter',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccftercli','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

IF pays_cour NOT IN ('gbr') THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccftercc','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Service sector consumption by end-uses;
CALC_DATA.Calcul_Serie_TEP('cmscfterchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfterchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfterchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfterchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfterchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfterchf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('cmscfterecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfterecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfterecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfterecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfterecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfterecs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('gazcftercui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcftercui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccftercui',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('elccfoffsels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfterlgt',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='cmbcfterchf' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfterecs','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='cmbcfterecs' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfterecs','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcftercui','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='cmbcftercui' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccftercui','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : space heating consumption with climatic corrections;
CALC_DATA.Calcul_Corr_Clim_Chf('cmscfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('petcfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('gazcfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('vapcfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('enccfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('elccfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Corr_Clim_Chf('solcfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfterchc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour IN ('gbr') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('toccfterchc','ktoe',1000,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfterchc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Floor area in service sector buildings adapter les rs pays;
IF pays_cour NOT IN ('prt','cro','grc') THEN
	CALC_DATA.Affectation_Serie('surter','surter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('surcom','surcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('surhcr','surhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	IF pays_cour IN ('swe') THEN
		-- Les données de la série surbur de la Suède sont effacées avant 2005 car elles incluent les valeurs de surgov.
		CALC_DATA.Affectation_Serie('surbur','surbur',pays_cour,2005,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_DATA.Affectation_Serie('surbur','surbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_DATA.Affectation_Serie('surgov','surgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('suredu','suredu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('surhos','surhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie('surdiv','surdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	IF pays_cour IN('grc') THEN
		CALC_DATA.Affectation_Serie_DIV_UNIT('surter','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('surcom','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('surhcr','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('surbur','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('surgov','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('suredu','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('surhos','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie_DIV_UNIT('surdiv','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		IF pays_cour IN('prt','cro') THEN
			CALC_DATA.Affectation_Serie_DIV_UNIT('surter','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie_DIV_UNIT('surcom','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie_DIV_UNIT('surhcr','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie_DIV_UNIT('surbur','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie_DIV_UNIT('surgov','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie_DIV_UNIT('suredu','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_DATA.Affectation_Serie_DIV_UNIT('surhos','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	END IF;
END IF;
IF pays_cour IN ('swe') THEN
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('surbup','surgov','Mm2',pays_cour,annee_initiale,2000,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('surbup','surgov','surbur','Mm2',pays_cour,2001,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('surbup','surgov','surbur','Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END If;

IF pays_cour IN ('cyp','rfy','ita') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuter','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsucom','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuhcr','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsubur','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsugov','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuedu','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuhos','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsudiv','km2',1000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	IF pays_cour IN ('prt','grc') THEN
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuter','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsucom','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuhcr','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsubur','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsugov','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuedu','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsuhos','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Affectation_Serie_DIV_UNIT('nsudiv','m2',1000000,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_DATA.Affectation_Serie('nsuter','nsuter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('nsucom','nsucom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('nsuhcr','nsuhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('nsubur','nsubur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('nsugov','nsugov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('nsuedu','nsuedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('nsuhos','nsuhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Affectation_Serie('nsudiv','nsudiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

--coment : Value added in service sector;
CALC_ECO.Calcul_Serie_Base('vadcomxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadburxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadbupxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadhcrxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadgovxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadeduxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadhosxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vaddivxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='vadburxx' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_AGREGAT_PRODUIT.Calcul_Serie_BUR('vadburxx','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(*) INTO serie_existe FROM Series WHERE code_serie='vadbupxx' AND code_pays=pays_cour;
IF serie_existe=0 THEN
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('vadbupxx','vadburxx','vadgovxx','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : Energy consumption by branch;
--coment : public offices;
CALC_DATA.Calcul_Serie_TEP('cmscfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Private offices;
CALC_DATA.Calcul_Serie_TEP('cmscfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Wholesale and retail trade;
CALC_DATA.Calcul_Serie_TEP('cmscfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Hotels and restaurants;
CALC_DATA.Calcul_Serie_TEP('cmscfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Education;
CALC_DATA.Calcul_Serie_TEP('cmscfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : Health;
CALC_DATA.Calcul_Serie_TEP('cmscfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : other;
CALC_DATA.Calcul_Serie_TEP('cmscfdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('petcfdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('gazcfdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('elccfdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('vapcfdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_TEP('enccfdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--Emplois
--IF pays_cour NOT IN ('fin') THEN
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('empbur') AND code_pays=pays_cour;
	IF serie_existe=0 THEN
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('empgov','emphos','empcom','emphcr','empedu') AND code_pays=pays_cour;
		IF serie_existe=5 THEN
			CALC_AGREGAT_PRODUIT.Calcul_Serie_BUR('empbur','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	END IF;
--END IF;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('empbup') AND code_pays=pays_cour;
IF serie_existe=0 THEN
	--IF pays_cour IN ('esp') THEN
	--ELSE
		CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('empbup','empgov','empbur','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	--END IF;
END IF;

--Bureaux privés + Bureaux publics
IF pays_cour IN ('esp') THEN
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cmscfbup','cmscfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('petcfbup','petcfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('gazcfbup','gazcfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('elccfbup','elccfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('vapcfbup','vapcfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('enccfbup','enccfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('elecfbup','elecfbur','TWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('cmscfbup','cmscfgov','cmscfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('petcfbup','petcfgov','petcfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('gazcfbup','gazcfgov','gazcfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('elccfbup','elccfgov','elccfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('vapcfbup','vapcfgov','vapcfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('enccfbup','enccfgov','enccfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Reaffectation_Serie_ODY('elecfbup','elecfgov','elecfbur','TWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

IF pays_cour NOT IN ('prt','ueur','ueur28') THEN
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfbup','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfbup','elccfbup');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfbup','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfgov','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfgov','elccfgov');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfgov','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfbur','elccfbur');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfbur','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;

	--Cas particulier Esp+Fra. On efface les données *cfbur et *cfgov car les données ne sont réparties correctement. (On efface les données exportées sous NRDWEB)
	/*
	IF pays_cour IN ('esp','fra') THEN
	  DELETE FROM etab_util WHERE code_serie='toccfgov';
	  DELETE FROM etab_util WHERE code_serie='toccfbur';
	  DELETE FROM etab_util WHERE code_serie='cmbcfgov';
	  DELETE FROM etab_util WHERE code_serie='cmbcfbur';
	  DELETE FROM etab_util WHERE code_serie='elccfgov';
	  DELETE FROM etab_util WHERE code_serie='elccfbur';
	END IF;
	*/

	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfhos','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfhos','elccfhos');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfhos','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfcom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfcom','elccfcom');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfcom','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfhcr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfhcr','elccfhcr');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfhcr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfedu','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfedu','elccfedu');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfedu','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
	CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cmbcfdiv','elccfdiv');
	IF serie_existe=2 THEN
		CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
ELSE
	IF pays_cour IN ('ueur','ueur28') THEN
		CALC_DATA.Calcul_Serie_TEP('toccfbup',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_TEP('toccfgov',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_TEP('toccfbur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_TEP('toccfhos',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_TEP('toccfcom',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_TEP('toccfhcr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_TEP('toccfedu',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_DATA.Calcul_Serie_TEP('toccfdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

--coment : adjusted consumption;
--coment : adjusted to EU climate;
/*IF pays_cour IN ('swe') THEN
	DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='pcclieleter');
	DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='pcclieleter');
	DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='pcclieleter');
	DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='pcclieleter');
	DELETE Series WHERE code_serie='pcclieleter' AND code_pays=pays_cour;
END IF;*/
IF pays_cour IN ('mlt','cyp') THEN
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('toccfresce','toccfrescc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('toccfterce','toccftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_DATA.Calcul_Corr_Clim_CE('toccfres','Mtoe',pays_cour,'ueur',annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_DATA.Calcul_Corr_Clim_CE('toccfter','Mtoe',pays_cour,'ueur',annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_AGREGAT_PRODUIT.Calcul_Serie_CFRETCE('toccfret','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_CFVENCE('toccf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_AGREGAT_PRODUIT.Calcul_Serie_RESDIV('cmscfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_RESDIV('petcfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_RESDIV('gazcfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_RESDIV('vapcfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_RESDIV('enccfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_PRODUIT.Calcul_Serie_RESDIV('elccfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_CMB('cmbcfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Calcul_Serie_TOC('toccfresdiv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
