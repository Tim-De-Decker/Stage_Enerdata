-- CALCUL DES INDICATEURS ODYSSEE
-- Traduction de la V1 en septembre 2019
-- Auteur : Fabien GAILLARD-BLANCARD / Gilles LEO
Job:='INDICODY';

--calcul_series

-- SET echo OFF
-- Set serveroutput off
DBMS_OUTPUT.PUT_LINE('Début INDIC');

CALC_DATA.Affectation_Serie('surmpr','surmpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('suripr','suripr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('suriprpc','suriprpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('newvpc130','newvpc130',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othreschf','othreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savpasstototh','savpasstototh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvpcgpl','csvpcgpl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('teqrfg','teqrfg',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('teqcli','teqcli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('teqscl','teqscl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('teqtvs','teqtvs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('ncfl','ncfl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cselecli','cselecli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('demofin','demofin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('structgoods','structgoods',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othtratot','othtratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savpasstot','savpasstot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othtrfnen','othtrfnen',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csmotess','csmotess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('structfin','structfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savpassoth','savpassoth',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('structpass','structpass',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgoods','savgoods',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('divter','divter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('electrification1','electrification1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othfin','othfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savtratot','savtratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othdiv','othdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othtrfnen1','othtrfnen1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pccfl','pccfl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savindoth','savindoth',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pkmnmt','pkmnmt',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savreschf','savreschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othtra','othtra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('divagr','divagr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nenprim','nenprim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvlrgpl','csvlrgpl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('teqlvl','teqlvl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('teqlvv','teqlvv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('cselescl','cselescl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('gazcftercli','gazcftercli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othres','othres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savresels','savresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('structpasstot','structpasstot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othtrfnenn','othtrfnenn',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('structind','structind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('elecfcon','elecfcon',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--incohérence unité/code
CALC_DATA.Affectation_Serie('savpass','savpass',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgoodsoth','savgoodsoth',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savcartech','savcartech',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othsavcar','othsavcar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othtrf','othtrf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('electrification','electrification',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcclia','pcclia',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcrfga','pcrfga',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcrfga1','pcrfga1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pclvla','pclvla',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pclvva','pclvva',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('salhp','salhp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--modif liste ? (salpac avant)
CALC_DATA.Affectation_Serie('structtra','structtra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('structtratot','structtratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othter','othter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('efftherm','efftherm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('teqcgl','teqcgl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie('surlog','surlog',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('surlogpc','surlogpc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvpnth','csvpnth',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvpnessth','csvpnessth',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvpngzlth','csvpngzlth',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savfin','savfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savind','savind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savtra','savtra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savres','savres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savter','savter',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pcdwchc','pcdwchc',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvlress','csvlress',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('csvlrgzl','csvlrgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('elecfressma','elecfressma',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--transverse ?

CALC_DATA.Affectation_Serie('salcb','salcb',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('salcbgas','salcbgas',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrcb','nbrcb',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('nbrcbgaz','nbrcbgas',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--prix
CALC_DATA.Affectation_Serie('prxgplres','prxgplres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxholres','prxholres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxgnares','prxgnares',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxvapres','prxvapres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxeleres','prxeleres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxess','prxess',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxgzl','prxgzl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxgpl','prxgpl',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxgzlind','prxgzlind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxfolind','prxfolind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxgnaind','prxgnaind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxeleind','prxeleind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxcmsres','prxcmsres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxcmsind','prxcmsind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_OTHCFIND('othcfind','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_TEP('toccfnen',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
/*CALC_INDICATEURS.Difference_2Series_ODY('toccpe','toccp','toccfnen','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('toccpecc','toccpcc','toccfnen','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctepc','toccpe','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctepccc','toccpecc','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctepcpp','toccpe','pibxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctepcppcc','toccpecc','pibxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);*/


--coment : 1 ECONOMIC INDICATORS
--coment : 1.1 Primary and final energy intensity
CALC_INDICATEURS.Calcul_Serie_Indice100('itoccfcc',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('ipibxxppp',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoctpc','toccp','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctfc','toccf','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelctfc','elccf','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbtfc','cmbcf','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutfc','ietoctpc','ietoctfc',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_rendement('rdtfc','cutfc','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pibxxpop','pibxx','pop',1,'kEUR2010/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--unité de odyssée devrait être kEUR2010/cap (/hab à unifier aussi)
CALC_INDICATEURS.Calcul_Serie_Part('pibxxppppop','pibxxppp','pop',1,'kEUR10p/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--unité trop longue avec 2010
--coment : Primary and final intensities with climatic variations;
CALC_INDICATEURS.Calcul_Serie_Part('ietoctpccc','toccpcc','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctfccc','toccfcc','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelctfccc','elccfcc','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbtfccc','cmbcfcc','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : 1.2 Residential intensities;
-- IF pays_cour='fin' THEN
	-- CALC_INDICATEURS.Produit_2Series_coeff('surres','nbrlpr','surlogpc',0.001,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--inclus les parties communes
	-- CALC_INDICATEURS.Produit_2Series_coeff('surreshpc','nbrlpr','surlog',0.001,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--hors parties communes
-- ELSE
	CALC_INDICATEURS.Produit_2Series_coeff('surres','nbrlpr','surlog',0.001,'Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--hors parties communes (sauf fin, décommenter la condition quand validé par EED)
-- END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cuelereslar','elecfreslar','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--double code cutocloglar
CALC_INDICATEURS.Calcul_Serie_Part('cuelerescli','elecfrescli','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurchc','toccfreschc','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogchc','toccfreschc','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelelogels','elecfresels','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('icuelereslar',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--icuelereslar remplace ieelcreslar
CALC_INDICATEURS.Calcul_Serie_Indice100('icutocsurchc',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--icutocsurchc remplace itoccfsurlog
CALC_INDICATEURS.Calcul_Serie_Indice100('icutoclogchc',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--icutoclogchc remplace itoccfreschc
CALC_INDICATEURS.Calcul_Serie_Indice100('icuelelogels',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--icuelelogels remplace ieelcresels

CALC_INDICATEURS.Calcul_Serie_Part('cprmen','cprxx','men',1,'kEUR2010/hh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocrespop','toccfres','pop',1000000,'koe/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocres','toccfres','cprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcres','elccfres','cprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbres','cmbcfres','cprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocrescc','toccfrescc','cprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcrescc','elccfrescc','cprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbrescc','cmbcfrescc','cprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocresce','toccfresce','cprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.3 Transport intensities
CALC_INDICATEURS.Calcul_Serie_Indice100('icsvpc',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour='dnk' THEN--voir utilité du cas particulier avec EED
--	CALC_INDICATEURS.Calcul_Serie_Part('cutoctgr','toccfcam','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cutoctgr','toccfcamvlr','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cutoccamtkm','toccfcam','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('icutoctgr',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccam','toccfcam','nbrcam',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('icutoccam',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoctra','toccftra','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelctra','elccftra','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbtra','cmbcftra','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.4 Industry intensities;
/*IF pays_cour NOT IN ('nor') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocsid','toccfsid1','prdacb',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Indice100('icutocsid',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;*/

CALC_INDICATEURS.Somme_2Series_ODY('prdppp','prdpap','prdpat','kt',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--cutocppp calculé uniquement si la production de papier est supérieure à 100 kt en 2010.
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='prdppp' AND code_pays=pays_cour;
IF serie_existe>0 AND pays_cour NOT IN ('cro','dnk','grc','lth') THEN
	SELECT valeur INTO somser FROM Valeurs_tab WHERE ticker=(SELECT numero FROM Series WHERE code_serie='prdppp' AND code_pays=pays_cour) AND tyear=2010;
	IF ABS(somser)>100 THEN
		CALC_INDICATEURS.Calcul_Serie_Part('cutocppp','toccfppp','prdppp',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_INDICATEURS.Calcul_Serie_Indice100('icutocppp',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('cueleppp','elecfppp','prdppp',1000000,'kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcppp','elccfppp','prdppp',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbppp','cmbcfppp','prdppp',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cuelepap','elecfpap','prdpap',1000000,'kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocpap','toccfpap','prdpap',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcpap','elccfpap','prdpap',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbpap','cmbcfpap','prdpap',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('tocchip','toccfchi','ipichixx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('toctexp','toccftex','ipitexxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('tociaap','toccfiaa','ipiiaaxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Indice100('itocchip',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('itoctexp',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('itociaap',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocind','toccfind','vadindxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcind','elccfind','vadindxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbind','cmbcfind','vadindxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocima','toccfima','vadimaxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcima','elccfima','vadimaxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbima','cmbcfima','vadimaxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocmpr','toccfmpr','vadmprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcmpr','elccfmpr','vadmprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbmpr','cmbcfmpr','vadmprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Somme_2Series_ODY('vadeqpxx','vadvehxx','vadmacxx','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('toccfeqp','toccfveh','toccfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('elccfeqp','elccfveh','elccfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('cmbcfeqp','cmbcfveh','cmbcfmac','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--IF pays_cour NOT IN ('nzl') THEN--voir utilité du cas particulier avec EED
	CALC_INDICATEURS.Calcul_Serie_Part('ietocchi','toccfchi','vadchixx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
CALC_INDICATEURS.Calcul_Serie_Part('ieelcchi','elccfchi','vadchixx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbchi','cmbcfchi','vadchixx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoccmp','toccfcmp','vadcmpxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelccmp','elccfcmp','vadcmpxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbcmp','cmbcfcmp','vadcmpxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocppp','toccfppp','vadpppxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcppp','elccfppp','vadpppxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbppp','cmbcfppp','vadpppxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocmnm','toccfmnm','vadmnmxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcmnm','elccfmnm','vadmnmxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbmnm','cmbcfmnm','vadmnmxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietociaa','toccfiaa','vadiaaxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelciaa','elccfiaa','vadiaaxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbiaa','cmbcfiaa','vadiaaxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoceqp','toccfeqp','vadeqpxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelceqp','elccfeqp','vadeqpxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbeqp','cmbcfeqp','vadeqpxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocmac','toccfmac','vadmacxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcmac','elccfmac','vadmacxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbmac','cmbcfmac','vadmacxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocveh','toccfveh','vadvehxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcveh','elccfveh','vadvehxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbveh','cmbcfveh','vadvehxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocfab','toccffab','vadfabxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcfab','elccffab','vadfabxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbfab','cmbcffab','vadfabxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoctex','toccftex','vadtexxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelctex','elccftex','vadtexxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbtex','cmbcftex','vadtexxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocmin','toccfmin','vadminxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcmin','elccfmin','vadminxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbmin','cmbcfmin','vadminxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoccon','toccfcon','vadconxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelccon','elccfcon','vadconxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbcon','cmbcfcon','vadconxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocboi','toccfboi','vadboixx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcboi','elccfboi','vadboixx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbboi','cmbcfboi','vadboixx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocidv','toccfidv','vadidvxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcidv','elccfidv','vadidvxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbidv','cmbcfidv','vadidvxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocwat','elccfwat','vadenexx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.5 Tertiary sector intensities;
CALC_INDICATEURS.Calcul_Serie_Part('ietocter','toccfter','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcter','elccfter','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbter','cmbcfter','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeleter','elecfter','vadterxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoctercc','toccftercc','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelctercc','elccftercc','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbtercc','cmbcftercc','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeletercc','elecftercc','vadterxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocdvr','toccfdvr','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcdvr','elccfdvr','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbdvr','cmbcfdvr','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeledvr','elecfdvr','vadterxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocdvrcc','toccfdvrcc','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcdvrcc','elccfdvrcc','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbdvrcc','cmbcfdvrcc','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeledvrcc','elecfdvrcc','vadterxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocterce','toccfterce','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocgov','toccfgov','vadgovxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcgov','elccfgov','vadgovxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbgov','cmbcfgov','vadgovxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelegov','elecfgov','vadgovxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocbur','toccfbur','vadburxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcbur','elccfbur','vadburxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbbur','cmbcfbur','vadburxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelebur','elecfbur','vadburxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocbup','toccfbup','vadbupxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcbup','elccfbup','vadbupxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbbup','cmbcfbup','vadbupxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelebup','elecfbup','vadbupxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoccom','toccfcom','vadcomxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelccom','elccfcom','vadcomxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbcom','cmbcfcom','vadcomxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelecom','elecfcom','vadcomxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocedu','toccfedu','vadeduxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcedu','elccfedu','vadeduxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbedu','cmbcfedu','vadeduxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeleedu','elecfedu','vadeduxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietochos','toccfhos','vadhosxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelchos','elccfhos','vadhosxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbhos','cmbcfhos','vadhosxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelehos','elecfhos','vadhosxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietochcr','toccfhcr','vadhcrxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelchcr','elccfhcr','vadhcrxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbhcr','cmbcfhcr','vadhcrxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelehcr','elecfhcr','vadhcrxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.6 Agriculture intensities;
CALC_INDICATEURS.Calcul_Serie_Part('ietocagr','toccfagr','vadagrxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieelcagr','elccfagr','vadagrxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('iecmbagr','cmbcfagr','vadagrxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.7 Intensity of industry at constant structure;
--coment : Divisia Index;
--coment : Total;

CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('toccfwat','elccfwat','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--calcul_series('toccfdvi=toccfind-toccfiaa-toccftex-toccfboi-toccfppp-toccfchi-toccfmnm-toccfmpr-toccfmac-toccfveh-toccfmin-toccfcon');
--calcul_series('vaddviec00=vadindec00-vadiaaec00-vadtexec00-vadboiec00-vadpppec00-vadchiec00-vadmnmec00-vadmprec00-vadmacec00-vadvehec00-vadminec00-vadconec00');

CALC_INDICATEURS.Calcul_Aggregat_Secteur_IMA('toccfima1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('toccfdvi','toccfima','toccfima1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Aggregat_Secteur_IMA('vadimaxx1','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('vaddvixx','vadimaxx','vadimaxx1','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimamprsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimachisd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimapppsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimamnmsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimaiaasd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimamacsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimavehsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimaeqpsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimatexsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimaboisd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimadvisd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocimawatsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Aggregat_Secteur_IMA('vitocimasd','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_VITOC_ED('vitocimaed',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Cumul('vitocimasdto','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('vitocimaedto','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtocimasd',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtocimaed',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('vadmprxx','vadmacxx','vadchixx') AND Code_pays=pays_cour AND Temp=temporalisation;
IF serie_existe=3 THEN
	CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocimaed','ivtocimaed','ietocima',0.01,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocimasd','ivtocimasd','ietocima',0.01,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : 1.8 Final intensity at constant structure;
--coment : Final energy intensity at constant structure of GDP between main;
--coment   sectors (agriculture, industry, services);
CALC_INDICATEURS.Calcul_Serie_Indice100('ivadindxx',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('ivadagrxx',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('ivadterxx',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('ipibxx',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('icprxx',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('toccfindcst','toccfind','ivadindxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('toccfagrcst','toccfagr','ivadagrxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('toccftercst','toccfdvr','ivadterxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('toccftracst','toccftra','ipibxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('toccfrescst','toccfres','icprxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('toccftercstcc','toccfdvrcc','ivadterxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('toccfrescstcc','toccfrescc','icprxx',100,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('toccfimacst','ietocimaed','vadimaxx',0.001,'Mtoe',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Intensite_Struc_Cst('ietoctfcst1','koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Intensite_Struc_Cst('ietoctfcst1cc','koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('vadmprxx','vadmacxx','vadchixx') AND code_pays=pays_cour;
IF (serie_existe=3) THEN
	CALC_INDICATEURS.Calcul_Intensite_Struc_Cst('ietoctfcst','koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	IF pays_cour='fin' THEN
		CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('ietoctfcstcc','ietoctfcst1cc','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_INDICATEURS.Calcul_Intensite_Struc_Cst('ietoctfcstcc','koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

--coment : 2 TECHNICO-ECONOMIC RATIOS;
--coment : 2.1 Residential technico-economic ratios;
--coment : Average unit consumption per dwellings;
CALC_INDICATEURS.Calcul_Serie_Part('cutocmen','toccfres','men',1000,'toe/hh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcmen','elccfres','men',1000,'toe/hh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelelog','elecfres','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclog','toccfres','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogcc','toccfrescc','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogchf','toccfreschf','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelelogcc','elecfrescc','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelelogcli','elecfrescli','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmblogcc','cmbcfrescc','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--Specific consumption for households
--Specific consumption for households for space heating and ECS
CALC_INDICATEURS.Somme_2Series_ODY('tocreschecs','toccfreschc','toccfresecs','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocreschecs','tocreschecs','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--Specific consumption for households for space heating, lighting and ECS
CALC_INDICATEURS.Somme_2Series_ODY('tocreschgtecs','tocreschecs','elccfreslgt','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocreschgtecs','tocreschgtecs','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--Specific consumption for households for space heating, lighting and ECS
CALC_INDICATEURS.Calcul_Serie_Part('cutocreschgtecsm2','tocreschgtecs','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--Specific consumption for households for lighting
CALC_INDICATEURS.Calcul_Serie_Part('cutocreslgtm2','elccfreslgt','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Average unit consumption per m2;
CALC_INDICATEURS.Calcul_Serie_Part('cutocsur','toccfres','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurcc','toccfrescc','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurchf','toccfreschf','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Indic_Equiv_Ch('cutocsurchch','cutocsurchc','koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Indic_Equiv_Ch('cutoclogchch','cutoclogchc','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Indic_Equiv_Ch('cucmblogch','cucmblogcc','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--remplace cucmbresch

CALC_INDICATEURS.Calcul_Serie_CUEUR('cueurlogchf','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_CUEUR('cueurlogchc','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_CUEUR('cueursurchc','koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cueurlogchcd','cueurlogchc','djref',1000,'koe/dw/dj',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueursurchcd','cueursurchc','djref',1000,'goe/m2/dj',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_CFCC('toccfmprchc','toccfmprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_CFCC('toccfiprchc','toccfiprchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='toccfmprchc' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocmprchc','toccfmprchc','nbrmpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cutociprchc','toccfiprchc','nbripr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Calcul_Serie_CUCC('cutocmprchc','csmprchf','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_CUCC('cutociprchc','csiprchf','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

	--calcul_series('cutocedwchc=((cutocmprchc*nbrmpr)+(cutociprchc*nbripr))/((nbrmpr*icumpr)+nbripr)'); --n'existe pas dans l'interface
END IF;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='toccfmprchf' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocmprchf','toccfmprchf','nbrmpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cutociprchf','toccfiprchf','nbripr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cutocmprchf','csmprchf','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cutociprchf','csiprchf','toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('cutocsurmprchf','toccfmprchf','surmpr',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurmprchc','toccfmprchc','surmpr',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
-- IF pays_cour='fin' THEN
	-- --inclus les parties communes
	-- CALC_INDICATEURS.Calcul_Serie_Part('cutocsuriprchf','toccfiprchf','suriprpc',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	-- CALC_INDICATEURS.Calcul_Serie_Part('cutocsuriprchc','toccfiprchc','suriprpc',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
-- ELSE
	--hors parties communes (sauf fin, décommenter la condition quand validé par EED)
	CALC_INDICATEURS.Calcul_Serie_Part('cutocsuriprchf','toccfiprchf','suripr',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cutocsuriprchc','toccfiprchc','suripr',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
-- END IF;

CALC_INDICATEURS.Calcul_Serie_Part('cselelgt','elecfreslgt','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='nbrlprele' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_INDICATEURS.Calcul_Serie_Part('pcdwnbrele','nbrlprele','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cuelcres','elccfres','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('pcdwnbrele','cuelcres','cueurlogchc',97,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('pcdwelehpeff','pcdwhpeff','pcdwnbrele',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--pcdwhpeff remplace nbrpcheatp, pcdwelehpeff remplace pcdwnbrelehp

--IF pays_cour NOT IN ('bgr','fin','ita','lth','lux','pol','prt','slo','swe') THEN
--	CALC_INDICATEURS.Calcul_Serie_EFF('effele','pcdwelehpeff','97','300','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id); --ne sert pas actuellement
--ELSE
	CALC_INDICATEURS.Affectation_Serie_Cste('effele','97','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;

IF pays_cour IN ('rfa') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('pcdwgaz','nbrlprgaz','nbrlpr',100,'%',pays_cour,annee_initiale,2007,temporalisation,Job,Job_Id);--pcdwgaz remplace pcdwnbrgas
	CALC_INDICATEURS.Calcul_Serie_Part('cugazres','gazcfres','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('pcdwgaz','cugazres','cueurlogchc',80,'%',pays_cour,2008,annee_finale,temporalisation,Job,Job_Id);
ELSE
 	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='nbrlprgaz' AND code_pays=pays_cour;
	IF serie_existe>0 THEN
		CALC_INDICATEURS.Calcul_Serie_Part('pcdwgaz','nbrlprgaz','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_INDICATEURS.Calcul_Serie_Part('cugazres','gazcfres','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_INDICATEURS.Calcul_Serie_Part('pcdwgaz','cugazres','cueurlogchc',80,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('pcdwcbgaz','nbrcbgaz','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--nbrcbgaz remplace nbrcb et stcbgaz, pcdwcbgaz remplace pcdwnbrgashp
CALC_INDICATEURS.Calcul_Serie_Part('pcdwgazcb','pcdwcbgaz','pcdwgaz',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--pcdwcbgaz remplace pcdwnbrgashp, pcdwgazcb remplace pcdwnbrgasgb

--IF pays_cour IN ('fra','gbr','nld','rcz','rfa') THEN
--	CALC_INDICATEURS.Calcul_Serie_EFF('effgaz','pcdwgazcb','80','107','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--effgaz remplace effgas, ne sert pas actuellement
--ELSE
	CALC_INDICATEURS.Affectation_Serie_Cste('effgaz','80','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;

--coment : water heating, cooking;
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogecs','toccfresecs','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurecs','toccfresecs','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour NOT IN ('usa','cor','can','jpn','aus','nzl','sui') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocecshab','toccfresecs','pop',1000,'toe/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogcui','toccfrescui','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogels','elecfresels','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogcli','toccfrescli','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 2.2 Transport technico-economic ratios;
CALC_INDICATEURS.Calcul_Moy_pond('csvlr','csvlress','csvlrgzl','nbrvlress','nbrvlrgzl','l/100km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Moy_pond('cscamvlr','cscamvlress','cscamvlrgzl','nbrcamvlress','nbrcamvlrgzl','l/100km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : specific consumption of new cars (test values);
-- IF pays_cour='grc' THEN
	-- DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='csvpnth');
	-- DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='csvpnth');
	-- DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='csvpnth');
	-- DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='csvpnth');
	-- DELETE Series WHERE code_serie='csvpnth' AND code_pays=pays_cour;
-- END IF;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='csvpnth' AND code_pays=pays_cour;
IF (serie_existe=0) THEN
	SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('csvpnessth','csvpngzlth') AND code_pays=pays_cour;
	IF (serie_existe=2) THEN
		CALC_INDICATEURS.Calcul_Moy_pond('csvpnth','csvpnessth','csvpngzlth','newvpcess','newvpcgzl','l/100km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_DATA.Calcul_Serie_CSVPCTH('csvpcth','l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : specific consumption of new cars at constant structure of new;
--coment   car registration by category of cars;
CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst('csvpnthst','csvpnessth','csvpngzlth','newvpcess','newvpcgzl','l/100km',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : gasoline;
--coment : unit consumption per gasoline vehicle;
CALC_INDICATEURS.Somme_3Series_ODY('nbrvehess','nbrvpcess','nbrvlress','nbrbusess','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuessveh','esscfrou','nbrvehess',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : unit consumption of gasoline per equivalent car;
--coment : all motor fuels;
--coment : unit consumption of cars;


CALC_INDICATEURS.Calcul_Serie_Part('cutocvpc','toccfvpc','nbrvpc',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccam','toccfcam','nbrcam',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocbus','toccfbus','nbrbus',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccamvlr','toccfcamvlr','nbrcamvlr',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocvpcvkm','cutocvpc','kmvvpc',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccamvkm','cutoccam','kmvcam',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocbusvkm','cutocbus','kmvbus',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccamvlrvkm','cutoccamvlr','kmvcamvlr',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Conversion_coeff('csvpcj','cutocvpcvkm','cst_tclun',10,'koe/vkm','MJ/km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Conversion_coeff('cscamj','cutoccamvkm','cst_tclun',10,'koe/vkm','MJ/km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Conversion_coeff('csbusj','cutocbusvkm','cst_tclun',10,'koe/vkm','MJ/km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Conversion_coeff('cscamvlrj','cutoccamvlrvkm','cst_tclun',10,'koe/vkm','MJ/km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : unit consumption of light vehicles;
CALC_INDICATEURS.Somme_3Series_ODY('nbrveh','nbrvpc','nbrcamvlr','nbrbus','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocveh','toccfrou','nbrveh',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_CU_EQC('cuesseqc','toe/careq',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='kmvvpcess' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cuesseqcvkm','cuesseqc','kmvvpcess',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cuesseqcvkm','cuesseqc','kmvvpc',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

cst_travail = 100/(const.VALEUR['cst_essun']*const.VALEUR['cst_essdn'])
CALC_INDICATEURS.Produit_Serie_Facteur('csesseqc','cuesseqcvkm',cst_travail,'l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series('csesseqc=(cuesseqcvkm/(cst_essun*cst_essdn))*100');

--coment : unit consumption of light vehicles;
SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('toccfvlr','toccfvpc') AND code_pays=pays_cour;
IF (serie_existe=2) THEN
	CALC_INDICATEURS.Somme_2Series_ODY('toccfvll','toccfvpc','toccfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Somme_2Series_ODY('nbrvll','nbrvpc','nbrvlr','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cutocvll','toccfvll','nbrvll',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('toccfvpc','nbrvpc') AND code_pays=pays_cour;
	IF (serie_existe=2) THEN
		CALC_INDICATEURS.Calcul_Serie_Part('cutocvll','toccfvpc','nbrvpc',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_INDICATEURS.Conversion_coeff('cuessvlr','cuesseqc','cst_coefvpcvlre',1,'toe/careq','toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_INDICATEURS.Calcul_Moy_pond('cutocvll','cuesseqc','cuessvlr','nbrvpc','nbrvlr','toe/veh',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

--coment:total consumption of trucks and light vehicules;
CALC_INDICATEURS.Calcul_Serie_Part('cutoccamvlr','toccfcamvlr','nbrcamvlr',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccamvlrvkm','cutoccamvlr','kmvcamvlr',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('toccfvlr','kmvvlr','nbrvlr') AND code_pays=pays_cour;
IF (serie_existe=3) THEN
	CALC_INDICATEURS.Calcul_Moy_pond('kmvvll','kmvvpc','kmvvlr','nbrvpc','nbrvlr','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cutocvllvkm','cutocvll','kmvvll',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cutocvllvkm','cutocvpcvkm','koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cstocvll','cutocvllvkm','vpcun',100,'l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : unit consumption per vkm of heavy vehicle;
CALC_INDICATEURS.Calcul_Series_HVV_difference('esscfhvv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Series_HVV_difference('gzlcfhvv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('toccfhvv','esscfhvv','gzlcfhvv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('nbrhvv','nbrcam','nbrbus','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('kmvhvv','kmcamv','kmvbus','km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutochvv','toccfhvv','nbrhvv',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutochvvvkm','cutochvv','kmvhvv',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

cst_travail = 100/(const.VALEUR['cst_gzlun']*const.VALEUR['cst_gzldn'])
CALC_INDICATEURS.Produit_Serie_Facteur('cstochvv','cutochvvvkm',cst_travail,'l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series('cstochvv=(cutochvvvkm/(cst_gzlun*cst_gzldn))*100');

CALC_INDICATEURS.Calcul_Serie_CU_EQC('cutoceqc','toe/careq',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : unit consumption per gasoline light vehicle;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='esscfvlr' AND code_pays=pays_cour;
IF (serie_existe=0) THEN
	CALC_INDICATEURS.Conversion_coeff('cuessvlr','cuesseqc','cst_coefvpcvlre',1,'toe/careq','toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Produit_2Series_coeff('esscfvlr','nbrvlress','cuessvlr',1,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='esscfvpctot' AND code_pays=pays_cour;
IF (serie_existe=0) THEN
	CALC_INDICATEURS.Produit_2Series_coeff('esscfvpctot','nbrvpcess','cuesseqc',1,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;


SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('esscfvlr','nbrvlress') AND code_pays=pays_cour;
IF (serie_existe=2) THEN
	CALC_INDICATEURS.Somme_2Series_ODY('esscfvll','esscfvpctot','esscfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Somme_2Series_ODY('nbrvlless','nbrvpcess','nbrvlress','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cuessvll','esscfvll','nbrvlless',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Conversion_coeff('cuessvlr','cuesseqc','cst_coefvpcvlre',1,'toe/careq','toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Moy_pond('cuessvll','cuesseqc','cuessvlr','nbrvpcess','nbrvlress','toe/veh',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : specific consumption per vkm of gasoline light vehicle;
CALC_INDICATEURS.Calcul_Serie_Part('cuessvpcvkm','cuessvpc','kmvvpcess',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='kmvvpcess' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('esscfvlr','kmvvlress','nbrvlress') AND code_pays=pays_cour;
	IF (serie_existe=3) THEN
		CALC_INDICATEURS.Calcul_Moy_pond('kmvvlless','kmvvpcess','kmvvlress','nbrvpcess','nbrvlress','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_INDICATEURS.Calcul_Serie_Part('cuessvllvkm','cuessvll','kmvvlless',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('esscfvlr','kmvvlr','nbrvlress') AND code_pays=pays_cour;
		IF (serie_existe=3) THEN
			CALC_INDICATEURS.Calcul_Moy_pond('kmvvlless','kmvvpcess','kmvvlr','nbrvpcess','nbrvlress','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			CALC_INDICATEURS.Calcul_Serie_Part('cuessvllvkm','cuessvll','kmvvlless',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		ELSE
			SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('esscfvlr','nbrvlress') AND code_pays=pays_cour;
			IF (serie_existe=2) THEN
				CALC_INDICATEURS.Calcul_Moy_pond('kmvvlless','kmvvpcess','kmvvpcess','nbrvpcess','nbrvlress','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
				CALC_INDICATEURS.Calcul_Serie_Part('cuessvllvkm','cuessvll','kmvvlless',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			ELSE
				CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cuessvllvkm','cuessvpcvkm','koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
			END IF;
		END IF;
	END IF;
END IF;

cst_travail = 100/(const.VALEUR['cst_essun']*const.VALEUR['cst_essdn'])
CALC_INDICATEURS.Produit_Serie_Facteur('csessvll','cuessvllvkm',cst_travail,'l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series('csessvll=(cuessvllvkm/(cst_essun*cst_essdn))*100');

--coment : unit consumption of diesel of light vehicles;
CALC_INDICATEURS.Calcul_Serie_Part('ratvpcessgzl','kmvvpcgzl','kmvvpcess',1,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
v_date:=annee_initiale;
while v_date<=annee_finale
LOOP
	SELECT COUNT(DISTINCT(valeur)) INTO serie_existe FROM Valeurs_tab WHERE
		ticker IN (SELECT numero FROM Series WHERE code_serie IN ('ratvpcessgzl') AND code_pays=pays_cour) AND tyear=v_date;
	IF (serie_existe=0) THEN
		UPDATE valeurs_tab SET valeur=2.5 WHERE ticker=(SELECT numero FROM Series WHERE code_serie='ratvpcessgzl' AND code_pays=pays_cour) AND tyear=v_date;
	END IF;
v_date:=v_date+1;
END LOOP;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='gzlcfvlr' AND code_pays=pays_cour;
IF (serie_existe=0) THEN
	CALC_INDICATEURS.Produit_2Series_coeff('cugzlvlr','cuesseqc','ratvpcessgzl',cst_coefvpcvlr,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Produit_2Series_coeff('gzlcfvlr','cugzlvlr','nbrvlrgzl',1,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
 END IF;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='gzlcfvpctot' AND code_pays=pays_cour;
IF (serie_existe=0) THEN
	CALC_INDICATEURS.Produit_2Series_coeff('cugzlvpc','cuesseqc','ratvpcessgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Produit_2Series_coeff('gzlcfvpctot','cugzlvpc','nbrvpcgzl',1,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;


--Remplacement
CALC_INDICATEURS.Somme_2Series_ODY('gzlcfvll','gzlcfvpctot','gzlcfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('nbrvllgzl','nbrvpcgzl','nbrvlrgzl','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cugzlvll','gzlcfvll','nbrvllgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Moy_pond('kmvvllgzl','kmvvpcgzl','kmvvlrgzl','nbrvpcgzl','nbrvlrgzl','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='kmvvllgzl' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvllvkm','cugzlvll','kmvvllgzl',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvllvkm','cugzlvll','kmvvpcgzl',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='gzlcfcamvlrtot' AND code_pays=pays_cour;
IF serie_existe>0 AND pays_cour NOT IN ('dnk') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cugzltgr','gzlcfcamvlrtot','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cugzltgr','gzlcfcam','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

/*Non pertinent selon FGB mais conservé au cas où
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='gzlcfvlr' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Somme_2Series_ODY('gzlcfvll','gzlcfvpctot','gzlcfvlr','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Somme_2Series_ODY('nbrvllgzl','nbrvpcgzl','nbrvlrgzl','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvll','gzlcfvll','nbrvllgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : unit consumption per vkm of diesel light vehicle;
SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('gzlcfvlr','kmvvlrgzl','nbrvlrgzl') AND code_pays=pays_cour;
IF (serie_existe=3) THEN
	CALC_INDICATEURS.Calcul_Moy_pond('kmvvllgzl','kmvvpcgzl','kmvvlrgzl','nbrvpcgzl','nbrvlrgzl','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvllvkm','cugzlvll','kmvvllgzl',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvll','gzlcfvpctot','nbrvpcgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvllvkm','cugzlvll','kmvvpcgzl',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='gzlcfcamvlrtot' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	IF pays_cour IN ('dnk') THEN
		CALC_INDICATEURS.Calcul_Serie_Part('cugzltgr','gzlcfcam','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_INDICATEURS.Calcul_Serie_Part('cugzltgr','gzlcfcamvlrtot','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvll','gzlcfvpctot','nbrvpcgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlvllvkm','cugzlvll','kmvvpcgzl',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cugzltgr','gzlcfcam','tkmrou',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;*/

cst_travail = 100/(const.VALEUR['cst_gzlun']*const.VALEUR['cst_gzldn'])
CALC_INDICATEURS.Produit_Serie_Facteur('csgzlvll','cugzlvllvkm',cst_travail,'l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series('csgzlvll=(cugzlvllvkm/(cst_gzlun*cst_gzldn))*100');

--coment : unit consumption of diesel of heavy vehicles, per vehicle and per vkm;
IF pays_cour NOT IN ('pol','rsl','rcz','esp','rom') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlcam','gzlcfcam','nbrcam',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
--IF pays_cour NOT IN ('lat') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlcamvlr','gzlcfcamvlrtot','nbrcamvlrgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
--IF pays_cour NOT IN ('cro') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cuesscamvlr','esscfcamvlrtot','nbrcamvlress',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cugzlcamvkm','cugzlcam','kmvcam',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--Remplace
CALC_INDICATEURS.Somme_2Series_ODY('nbrhvvgzl','nbrcam','nbrbusgzl','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cugzlhvv','gzlcfhvv','nbrhvvgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Moy_pond('kmvhvvgzl','kmvcam','kmvbus','nbrcam','nbrbusgzl','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cugzlhvvvkm','cugzlhvv','kmvhvvgzl',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

/*Non pertinent selon FGB mais conservé au cas où
SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('gzlcfvpctot','gzlcfbus','nbrcam') AND code_pays=pays_cour;
IF (serie_existe=3) THEN
	CALC_INDICATEURS.Somme_2Series_ODY('nbrhvvgzl','nbrcam','nbrbusgzl','M',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cugzlhvv','gzlcfhvv','nbrhvvgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='kmvcam' AND code_pays=pays_cour;
	IF (serie_existe>0) THEN
		CALC_INDICATEURS.Calcul_Moy_pond('kmvhvvgzl','kmvcam','kmvbus','nbrcam','nbrbusgzl','km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_INDICATEURS.Calcul_Serie_Part('cugzlhvvvkm','cugzlhvv','kmvhvvgzl',1000,'koe/vkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
ELSE
	SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('gzlcfvpctot','nbrcam') AND code_pays=pays_cour;
	IF (serie_existe=2) THEN
		calcul_series('cugzlhvv=((gzlcfrou-gzlcfvpctot-(nbrvlrgzl*cuesseqc*cst_coefvpcvlr))/(nbrcam+nbrbus-nbrbusess))*1000');
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='vkmcam' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			calcul_series('cugzlhvvvkm=(gzlcfrou-gzlcfvpctot-(nbrvlrgzl*cuesseqc*cst_coefvpcvlr))');
			calcul_series('cugzlhvvvkm=(cugzlhvvvkm/((vkmcam*(nbrcam)/nbrcam)+(vkmbus*(nbrbus-nbrbusess)/nbrbus)))*1000');
		END IF;
	ELSE
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='nbrvlrgzl' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			calcul_series('cugzlhvv=(gzlcfrou-(nbrvpcgzl*cuesseqc)-(nbrvlrgzl*cuesseqc*cst_coefvpcvlr))/(nbrcam+nbrbus)*1000');
			SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='vkmcam' AND code_pays=pays_cour;
			IF (serie_existe>0) THEN
				calcul_series('cugzlhvvvkm=gzlcfrou-(nbrvpcgzl*cuesseqc)-(nbrvlrgzl*cuesseqc*cst_coefvpcvlr)');
				calcul_series('cugzlhvvvkm=(cugzlhvvvkm/((vkmcam*(nbrcam-nbrcamess-nbrcamgpl)/nbrcam)+(vkmbus*(nbrbus-nbrbusess-nbrbusgpl)/nbrbus)))*1000');
			END IF;
		END IF;
	END IF;
END IF;*/
DBMS_OUTPUT.PUT_LINE('Début INDIC 5');
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cscamgzl' AND code_pays=pays_cour;
IF (serie_existe=0) THEN
	CALC_INDICATEURS.Produit_Serie_Facteur('cscamgzl','cugzlcamvkm',cst_travail,'l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series('cscamgzl=(cugzlcamvkm/(cst_gzlun*cst_gzldn))*100');
END IF;

CALC_INDICATEURS.Produit_Serie_Facteur('csgzlhvv','cugzlhvvvkm',cst_travail,'l/100km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series('csgzlhvv=(cugzlhvvvkm/(cst_gzlun*cst_gzldn))*100');

--coment : LPG, Gas;
--coment : unit consumption LPG light vehicle, per vehicle and per vkm;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='gplcfvpc' AND code_pays=pays_cour;
IF (serie_existe=0) THEN
	CALC_INDICATEURS.Produit_2Series_coeff('gplcfvpc','nbrvpcgpl','cuesseqc',1,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : unit consumption of good transport for road, rail, and;
--coment : water transport;

CALC_INDICATEURS.Calcul_Serie_Part('cutocmot','toccfmot','nbrmot',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocfer','toccffer','tkbfer',1,'koe/tkb',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour NOT IN ('gbr','lth') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocflv','toccfflv','tkmflv',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('cuessbus','esscfbus','nbrbusess',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cugzlbus','gzlcfbus','nbrbusgzl',1,'toe/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocbuspkm','toccfbus','pkmbus',1,'koe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : unit consumption of air transport;
IF pays_cour NOT IN ('lux') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocair','toccfair','pasair',1000,'toe/pas',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cucarair','carcfair','pasair',1000,'toe/pas',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cutocavd','carcfado','pkmavd',1,'koe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

-- comment: Part des transports publiques dans le total transport
CALC_INDICATEURS.Somme_2Series_ODY('pkmpub','pkmbus','pkmfertot','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('tkmpub','tkmfer','tkmflv','Gtkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('pkmter','pkmrou','pkmfertot','Gpkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcpkmpub','pkmpub','pkmter',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pctkmpub','tkmpub','tkm',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : unit consumption per passenger-km;
CALC_INDICATEURS.Calcul_Serie_Part('cutocvpcpkm','toccfvpc','pkmvpc',1,'koe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocflvpkm','toccfflv','pkmflv',1,'koe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_Serie_Facteur('cutocferpkm','cutocfer',1.7,'koe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_Serie_Facteur('cutocfertkm','cutocfer',2.5,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Somme_2Series_ODY('toccfroupas','toccfvpc','toccfbus','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocpkmrou','toccfroupas','pkmrou',1,'koe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--cutocpkmrou remplace cutocpkmroa

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='toccfcamvlr' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	IF pays_cour='eso' THEN
		CALC_INDICATEURS.Calcul_Moy_pond('cutocmch','cutoctgr','cutocfertkm','tkmrou','tkmfer','koe/tkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocmch','cutoctgr','cutocfertkm','cutocflv','tkmrou','tkmfer','tkmflv','koe/tkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cutoctgr' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst_3arg('cutocmchst','cutocfertkm','cutoctgr','cutocflv','tkmfer','tkmrou','tkmflv','koe/tkm',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cutocpkmrou' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Moy_pond('cutocpkm','cutocpkmrou','cutocferpkm','pkmrou','pkmfertot','koe/pkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmavd' AND code_pays=pays_cour;
	IF (serie_existe>0) THEN
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmflv' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocpkm','cutocpkm','cutocflvpkm','cutocavd','pkmter','pkmflv','pkmavd','koe/pkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		ELSE
			CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocpkm','cutocpkmrou','cutocferpkm','cutocavd','pkmrou','pkmfertot','pkmavd','koe/pkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	ELSE
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmflv' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocpkm','cutocpkmrou','cutocferpkm','cutocflvpkm','pkmrou','pkmfertot','pkmflv','koe/pkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	END IF;
END IF;


--coment : Unit consumption per passenger-km at constant structure;
--coment   by mode;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cutocpkmrou' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst('cutocpkmst','cutocpkmrou','cutocferpkm','pkmrou','pkmfertot','koe/pkm',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmavd' AND code_pays=pays_cour;
	IF (serie_existe>0) THEN
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmflv' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst_3arg('cutocpkmst','cutocpkmst','cutocflvpkm','cutocavd','pkmter','pkmflv','pkmavd','koe/pkm',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		ELSE
			CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst_3arg('cutocpkmst','cutocpkmrou','cutocferpkm','cutocavd','pkmrou','pkmfertot','pkmavd','koe/pkm',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	ELSE
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmflv' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst_3arg('cutocpkmst','cutocpkmrou','cutocferpkm','cutocflvpkm','pkmrou','pkmfertot','pkmflv','koe/pkm',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	END IF;
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('tkmpib','tkm','pibxx',1000,'tkm/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pkmpib','pkm','pibxx',1000,'pkm/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pkmterpib','pkmter','pibxx',1000,'pkm/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoctkm','toccfmch','tkm',1,'koe/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst_3arg('cutoctkmst','cutocflv','cutoctgr','cutocavd','tkmflv','tkmfer','tkmrou','koe/tkm',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 2.3 Industry technico-economic ratios;
--coment : Unit consumption of energy intensive products;

--cutocacb calculé uniquement si la production de papier est supérieure à 1000 kt en 2010.
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='prdacb' AND code_pays=pays_cour;
IF serie_existe>0 AND pays_cour NOT IN ('dnk','eso','irl','cro','nor') THEN
	SELECT valeur INTO somser FROM Valeurs_tab WHERE ticker=(SELECT numero FROM Series WHERE code_serie='prdacb' AND code_pays=pays_cour) AND tyear=2010;
	IF ABS(somser)>1000 THEN
		CALC_INDICATEURS.Calcul_Serie_Part('cutocacb','toccfsid1','prdacb',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		CALC_INDICATEURS.Calcul_Serie_Indice100('icutocacb',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('cuelcacb','elccfacb','prdacb',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour NOT IN ('nor') THEN
CALC_INDICATEURS.Calcul_Serie_Part('cucmbacb','cmbcfsid1','prdacb',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleacb','elecfsid1','prdacb',1000000,'kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('cutoccim','toccfcim','prdcim',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelccim','elccfcim','prdcim',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbcim','cmbcfcim','prdcim',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelecim','elecfcim','prdcim',1000000,'kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour NOT IN ('esp') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('shclkcim','prdclk','prdcim',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--shclkcim remplace shcimclk
--END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cucmbclk','cmbcfcim','prdclk',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

IF pays_cour NOT IN ('pol') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocver','toccfver','prdver',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cuelcver','elccfver','prdver',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbver','cmbcfver','prdver',1000,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('icutocver',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelever','elecfver','prdver',1000000,'kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Specific consumption by product/process;
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cscmbacboxy','cmbcsacboxy','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cseleacboxy','elecsacboxy','kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cscmbacboxy','cseleacboxy') AND code_pays=pays_cour;
IF (serie_existe=2) THEN
	cst_travail = const.VALEUR['cst_elcun]/1000
	CALC_INDICATEURS.Produit_Serie_Facteur('cselcacboxy','cseleacboxy',cst_travail,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series ((elecsacboxy*cst_elcun)/1000);
	CALC_INDICATEURS.Somme_2Series_ODY('cstocacboxy','cscmbacboxy','cselcacboxy','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cscmbacbele','cmbcsacbele','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cseleacbele','elecsacbele','kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cscmbacbele','cseleacbele') AND code_pays=pays_cour;
IF (serie_existe=2) THEN
	cst_travail = const.VALEUR['cst_elcun]/1000
	CALC_INDICATEURS.Produit_Serie_Facteur('cselcacboxy','cseleacboxy',cst_travail,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series ((elecsacbele*cst_elcun)/1000);
	CALC_INDICATEURS.Somme_2Series_ODY('cstocacbele','cscmbacbele','cselcacbele','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cscmbcim','cmbcscim','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cselecim','elecscim','kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='toccscim' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cstoccim','toccscim','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cscmbcim','cselecim') AND code_pays=pays_cour;
	IF (serie_existe=2) THEN
		cst_travail = const.VALEUR['cst_elcun]/1000
		CALC_INDICATEURS.Produit_Serie_Facteur('cselccim','cselecim',cst_travail,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series (elecscim*cst_elcun/1000);
		CALC_INDICATEURS.Somme_2Series_ODY('cstoccim','cscmbcim','cselccim','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cscmbclk','cmbcsclk','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cseleclk','elecsclk','kWh/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='toccsclk' AND code_pays=pays_cour;
IF serie_existe>0 THEN
	CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cstocclk','toccsclk','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cscmbclk','cseleclk');
	IF (serie_existe=2) THEN
		cst_travail = const.VALEUR['cst_elcun]/1000
		CALC_INDICATEURS.Produit_Serie_Facteur('cselcclk','cseleclk',cst_travail,'toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series (elecsclk*cst_elcun/1000);
		CALC_INDICATEURS.Somme_2Series_ODY('cstocclk','cscmbclk','cselcclk','toe/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

--coment : specific consumption of energy intensive product at constant;
--coment   process mix;
CALC_INDICATEURS.Calcul_Moy_pond_Struc_Cst('cstocacbst1','cstocacboxy','cstocacbele','prdacboxy','prdacbele','toe/t',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(valeur) INTO serie_existe FROM Valeurs_tab WHERE ticker IN (SELECT numero FROM Series WHERE code_serie='cstocacbst1' AND Code_pays=pays_cour AND unite='toe/t' AND Temp=temporalisation) AND Tyear=v_an_base;
IF (serie_existe=1) THEN
	cst_travail = recupSerie(resOdy, 'cstocacbst1', 2000)
	CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('cutocacbst','cstocacbst1','cutocacb',cst_travail,'toe/t',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : 2.4 Tertiary technico-economic ratios;
CALC_INDICATEURS.Calcul_Ratio_UE('pcuedjref','djrefcomp','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutocter','toccfter','empter',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcter','elccfter','empter',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbter','cmbcfter','empter',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoctercc','toccftercc','empter',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelctercc','elccftercc','empter',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbtercc','cmbcftercc','empter',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleter','elecfter','empter',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleterels','elecfterels','empter',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueletercc','elecftercc','empter',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);


CALC_INDICATEURS.Difference_2Series_ODY('elccfterdiv','elccfter','elccfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfterdiv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleterdiv','elecfterdiv','empter',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocterchc','toccfterchc','empter',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('cuelcterchc','cuelctercc','pcchftercc',1,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('cucmbterchc','cucmbtercc','pcchftercc',1,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Difference_2Series_ODY('cutocterdiv','cutoctercc','cutocterchc','toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('cuelcterdiv','cuelctercc','cuelcterchc','toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('cucmbterdiv','cucmbtercc','cucmbterchc','toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('cutocterche','cutocterchc','pcuedjref',1,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('cuelcterche','cuelcterchc','pcuedjref',1,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('cucmbterche','cucmbterchc','pcuedjref',1,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('cutocterce','cutocterche','cutocterdiv','toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('cuelcterce','cuelcterche','cuelcterdiv','toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('cucmbterce','cucmbterche','cucmbterdiv','toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutocterm2','toccfter','surter',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbterm2','cmbcfter','surter',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour NOT IN ('grc') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cuelcterm2','elccfter','surter',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cueleterm2','elecfter','surter',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
CALC_INDICATEURS.Calcul_Serie_Part('cutocterccm2','toccftercc','surter',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcterccm2','elccftercc','surter',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbterccm2','cmbcftercc','surter',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleterccm2','elecftercc','surter',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleterelsm2','elecfterels','surter',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutocgov','toccfgov','empgov',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcgov','elccfgov','empgov',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbgov','cmbcfgov','empgov',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelegov','elecfgov','empgov',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocgovm2','toccfgov','surgov',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcgovm2','elccfgov','surgov',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbgovm2','cmbcfgov','surgov',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelegovm2','elecfgov','surgov',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutocbur','toccfbur','empbur',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcbur','elccfbur','empbur',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbbur','cmbcfbur','empbur',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelebur','elecfbur','empbur',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocburm2','toccfbur','surbur',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcburm2','elccfbur','surbur',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbburm2','cmbcfbur','surbur',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleburm2','elecfbur','surbur',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutocbup','toccfbup','empbup',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcbup','elccfbup','empbup',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbbup','cmbcfbup','empbup',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelebup','elecfbup','empbup',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocbupm2','toccfbup','surbup',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcbupm2','elccfbup','surbup',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbbupm2','cmbcfbup','surbup',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelebupm2','elecfbup','surbup',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutochos','toccfhos','emphos',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelchos','elccfhos','emphos',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbhos','cmbcfhos','emphos',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelehos','elecfhos','emphos',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutochosm2','toccfhos','surhos',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelchosm2','elccfhos','surhos',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbhosm2','cmbcfhos','surhos',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelehosm2','elecfhos','surhos',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutoccom','toccfcom','empcom',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelccom','elccfcom','empcom',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbcom','cmbcfcom','empcom',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelecom','elecfcom','empcom',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccomm2','toccfcom','surcom',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelccomm2','elccfcom','surcom',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbcomm2','cmbcfcom','surcom',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelecomm2','elecfcom','surcom',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutochcr','toccfhcr','emphcr',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelchcr','elccfhcr','emphcr',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbhcr','cmbcfhcr','emphcr',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelehcr','elecfhcr','emphcr',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutochcrm2','toccfhcr','surhcr',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbhcrm2','cmbcfhcr','surhcr',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour NOT IN ('prt') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cuelchcrm2','elccfhcr','surhcr',1,'toe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cuelehcrm2','elecfhcr','surhcr',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('cutocedu','toccfedu','empedu',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcedu','elccfedu','empedu',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbedu','cmbcfedu','empedu',1000,'toe/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleedu','elecfedu','empedu',1000000,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocedum2','toccfedu','suredu',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcedum2','elccfedu','suredu',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cucmbedum2','cmbcfedu','suredu',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cueleedum2','elecfedu','suredu',1000,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 3 ADJUSTED INDICATORS FOR CROSS COUNTRY COMPARAISONS;
--coment : 3.1 Macro-economic indicators;
--coment : Energy intensities at purchasing power parities (2010p);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctpcpp','toccp','pibxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctfcpp','toccf','pibxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctpcppcc','toccpcc','pibxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctfcppcc','toccfcc','pibxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctrapp','toccftra','pibxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocindpp','toccfind','vadindxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocrespp','toccfres','cprxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocresppcc','toccfrescc','cprxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocterpp','toccfter','vadterxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocterppcc','toccftercc','vadterxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocdvrpp','toccfdvr','vadterxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocimapp','toccfima','vadimaxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietociaapp','toccfiaa','vadiaaxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctexpp','toccftex','vadtexxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocmnmpp','toccfmnm','vadmnmxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoceqppp','toccfeqp','vadeqpxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocmacpp','toccfmac','vadmacxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocvehpp','toccfveh','vadvehxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocfabpp','toccffab','vadfabxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocchipp','toccfchi','vadchixxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocppppp','toccfppp','vadpppxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocmprpp','toccfmpr','vadmprxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocboipp','toccfboi','vadboixxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocidvpp','toccfidv','vadidvxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoccmppp','toccfcmp','vadcmpxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocminpp','toccfmin','vadminxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocconpp','toccfcon','vadconxxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietocenepp','toccfene','vadenexxppp',1000,'koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ieelcterppcc','ieelctercc','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ieeleterppcc','ieeletercc','kWh/kEUR10p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Energy intensities adjusted to reference climate at;
--coment   purchasing power parities;
CALC_INDICATEURS.Calcul_Serie_Part('ietoctfcce','toccfce','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietoctfccepp','ietocimaaj','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : intensity at constant structure;
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietoctfcstpp','ietoctfcst','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietoctfcstppcc','ietoctfcstcc','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Final energy intensity at adjusted structure of a reference country;
--coment   at purchasin power parities;
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocimaedpp','ietocimaed','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : Intensity of manufacturing at adjusted structure of ref country;
CALC_INDICATEURS.Calcul_Serie_Part('ipcim','prdcim','vadimaxx',1,'kt/MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--ipcim remplace shcim
CALC_INDICATEURS.Calcul_Serie_Part('ipppp','prdppp','vadimaxx',1,'kt/MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--ipppp remplace shppp
CALC_INDICATEURS.Calcul_Serie_Part('ipacb','prdacb','vadimaxx',1,'kt/MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--ipacb remplace shsid

CALC_INDICATEURS.Calcul_Serie_Part('shind','toccfind','toccf',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shchi','vadchixx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shmpr','vadmprxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shmnm','vadmnmxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shppp','vadpppxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shiaa','vadiaaxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shtex','vadtexxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('sheqp','vadeqpxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shmac','vadmacxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shveh','vadvehxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shboi','vadboixx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shidv','vadidvxx','vadimaxx',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_AJ('ietocimampraj','ietocmpr','vadmprxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimachiaj','ietocchi','vadchixx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimamnmaj','ietocmnm','vadmnmxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimaiaaaj','ietociaa','vadiaaxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimamacaj','ietocmac','vadmacxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimavehaj','ietocveh','vadvehxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimatexaj','ietoctex','vadtexxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimaidvaj','ietocidv','vadidvxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimawataj','ietocwat','vadwatxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimaboiaj','ietocboi','vadboixx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('cutocppp') AND code_pays=pays_cour;
IF (serie_existe=1) THEN
	CALC_INDICATEURS.Calcul_Serie_AJ('ietocimapppaj','cutocppp','prdppp','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Calcul_Serie_AJ('ietocimapppaj','ietocppp','vadpppxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Aggregat_Secteur_IMA('ietocimaaj','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocimaajpp','ietocimaaj','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : energy intensity of manufacturing adjusted from VA and production;
CALC_INDICATEURS.Calcul_Serie_Part('ietocmnf','toccfmnf','vadmprxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimaacbaj','cutocacb','prdacb','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimamnfaj','ietocmnf','vadmprxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimacimaj','cutoccim','prdcim','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimapapaj','cutocpap','prdpap','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_AJ('ietocimaeqpaj','ietoceqp','vadeqpxx','vadimaxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Produit_2Series_coeff('toccfchiaj','ietocimachiaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfmnmaj','ietocimamnmaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfpppaj','ietocimapppaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfiaaaj','ietocimaiaaaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccftexaj','ietocimatexaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfmacaj','ietocimamacaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfvehaj','ietocimavehaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfboiaj','ietocimaboiaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour NOT IN ('nor') THEN
	CALC_INDICATEURS.Produit_2Series_coeff('toccfsidaj','ietocimaacbaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Produit_2Series_coeff('toccfmnfaj','ietocimamnfaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Somme_2Series_ODY('toccfmpraj','toccfsidaj','toccfmnfaj','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	CALC_INDICATEURS.Produit_2Series_coeff('toccfmpraj','ietocimampraj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
CALC_INDICATEURS.Produit_2Series_coeff('toccfcimaj','ietocimacimaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfpapaj','ietocimapapaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('toccfeqpaj','ietocimaeqpaj','vadimaxx',0.001,'Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Difference_2Series_ODY('toccfmnmoaj','toccfmnmaj','toccfcimaj','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('toccfidvaj','toccfidv','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Aggregat_Secteur_IMA('toccfimaaj','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocimaaj2','toccfimaaj','vadimaxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocimaaj2pp','ietocimaaj2','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('vadmprxx','vadmacxx','vadchixx') AND code_pays=pays_cour;
IF (serie_existe=3) THEN
	CALC_INDICATEURS.Difference_2Series_ODY('vadinmxx','vadindxx','vadimaxx','MEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Difference_2Series_ODY('toccfinm','toccfind','toccfima','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('ietocinm','toccfinm','vadinmxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietocindinmaj','ietocinm','vadinmxx','vadindxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietocindimaaj','ietocimaaj','vadimaxx','vadindxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Somme_2Series_ODY('ietocindaj','ietocindinmaj','ietocindimaaj','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcinmaj','ietocinm','vadinmxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcimaaj','ietocimaaj','vadimaxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcagraj','ietocagr','vadagrxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcdvraj','ietocdvr','vadterxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfctraaj','ietoctra','pibxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcresaj','ietocres','cprxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Somme_2Series_ODY('ietoctfcindaj','ietoctfcinmaj','ietoctfcimaaj','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Aggregat_Secteurs_Prim('ietoctfcaj','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	
	CALC_INDICATEURS.Difference_2Series_ODY('toccfdvr1','toccfdvr','toccfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('ietocdvr1','toccfdvr1','vadterxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcdvr1aj','ietocdvr1','vadterxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcterceaj','ietocterce','vadterxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_AJ('ietoctfcresceaj','ietocresce','cprxx','pibxx','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Somme_2Series_ODY('ietoctfcdvrceaj','ietoctfcdvr1aj','ietoctfcterceaj','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Aggregat_Secteurs_Prim('ietoctfcceaj','koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

SELECT COUNT(distinct(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('vadmprxx','vadmacxx','vadchixx') AND code_pays=pays_cour;
IF (serie_existe=3) THEN
	CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocindajpp','ietocindaj','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietoctfcajpp','ietoctfcaj','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietoctfcceajpp','ietoctfcceaj','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('dflpibxx','pib','pibxx',100,'2010=100',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Indice100('itxchgppp',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Indice100('idflpibxx',2010,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('coef_cstp_crtp','idflpibxx','itxchgppp',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Produit_2Series_coeff('ietoctfcceajp','ietoctfcceajpp','coef_cstp_crtp',1,'koe/EURp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

cst_travail = recupSerie(resOdy,'txchgeuro',2010)/recupSerie(resOdy,'txchgppp',2010)

CALC_INDICATEURS.Produit_Serie_Facteur('cprmenp','cprmen',cst_travail,'kEUR2010p/hh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--calcul_series cprmen05p=(cprmen*cst_txchgecu00)/cst_txchgppp05;

--coment : 3.2 Residential sector;
--coment : Unit consumption adjusted to reference climate;
CALC_INDICATEURS.Produit_2Series_coeff('cutoclogche','cutoclogchc','pcuedjref',1,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);




CALC_INDICATEURS.Calcul_Serie_Part('cutoclogce','toccfresce','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--IF pays_cour NOT IN ('lux') THEN
--IF pays_cour NOT IN ('lux','mlt') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cutocsurce','toccfresce','surres',1000,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
CALC_INDICATEURS.Produit_2Series_coeff('cutocsurche','cutocsurchc','pcuedjref',1,'koe/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

/*IF pays_cour IN ('lux') THEN
	DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurcc');
	DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurcc');
	DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurcc');
	DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurcc');
	DELETE Series WHERE code_serie='cutocsurcc' AND code_pays=pays_cour;
END IF;

IF pays_cour='cyp' THEN
	DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurchc');
	DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurchc');
	DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurchc');
	DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocsurchc');
	DELETE Series WHERE code_serie='cutocsurchc' AND code_pays=pays_cour;
	
	DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cueursurchc');
	DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cueursurchc');
	DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cueursurchc');
	DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cueursurchc');
	DELETE Series WHERE code_serie='cueursurchc' AND code_pays=pays_cour;
END IF;*/

--coment : Transport;
--coment : unit consumption per passenger-km at reference model split;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cutocpkmrou' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Moy_pond('cutocpkmaj','cutocpkmrou','cutocferpkm','pkmrou','pkmfertot','koe/pkm','ueur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmavd' AND code_pays=pays_cour;
	IF (serie_existe>0) THEN
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmflv' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocpkmaj','cutocpkmaj','cutocflvpkm','cutocavd','pkmter','pkmflv','pkmavd','koe/pkm','ueur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		ELSE
			CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocpkmaj','cutocpkmrou','cutocferpkm','cutocavd','pkmrou','pkmfertot','pkmavd','koe/pkm','ueur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	ELSE
		SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmflv' AND code_pays=pays_cour;
		IF (serie_existe>0) THEN
			CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocpkmaj','cutocpkmrou','cutocferpkm','cutocflvpkm','pkmrou','pkmfertot','pkmflv','koe/pkm','ueur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
		END IF;
	END IF;
END IF;

--coment : unit consumption per tons-km at reference model split;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cugzltgr' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Moy_pond_3arg('cutocmchaj','cutocfertkm','cugzltgr','cutocflv','tkmfer','tkmrou','tkmflv','koe/tkm','ueur',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

/*IF pays_cour='cyp' THEN
	DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmch');
	DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmch');
	DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmch');
	DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmch');
	DELETE Series WHERE code_serie='cutocmch' AND code_pays=pays_cour;
	
	DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchst');
	DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchst');
	DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchst');
	DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchst');
	DELETE Series WHERE code_serie='cutocmchst' AND code_pays=pays_cour;
	
	DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchaj');
	DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchaj');
	DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchaj');
	DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='cutocmchaj');
	DELETE Series WHERE code_serie='cutocmchaj' AND code_pays=pays_cour;
END IF;*/

--Calcul Energy Efficiency Gains
CALC_INDICATEURS.Calcul_Series_EEG('eegtottot','odextottot','%',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Series_EEG('eegres','odexres','%',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Series_EEG('eegtra','odextra','%',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Series_EEG('eegman','odexman','%',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Series_EEG('eegind','odexind','%',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Series_EEG('eegter','odexter','%',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Series_EEG('eegtot','odextot','%',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);

--coment : INDICATEURS CARBON EMMISSIONS;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbtfcpop','cmbectfc','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcetfcpop','cmbectot','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbtfcccpo','cmbectfccc','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcetfcccpo','cmbectotcc','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1 ECONOMIC INDICATORS;
--coment : 1.1 Primary and final energy intensity;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbtfc','cmbectfc','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcetfc','cmbectot','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.2 Primary and final intensities with climatic variations;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbtfccc','cmbectfccc','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcetfccc','cmbectotcc','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.3 Transport intensities;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbtra','cmbectra','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcetra','tceectra','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.4 Industry intensities;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbind','cmbecind','vadindxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceind','tceecind','vadindxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbima','cmbecima','vadimaxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceima','tceecima','vadimaxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbchi','cmbecchi','vadchixx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcechi','tceecchi','vadchixx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbeqp','cmbeceqp','vadeqpxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceeqp','tceeceqp','vadeqpxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbmac','cmbecmac','vadmacxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcemac','tceecmac','vadmacxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbveh','cmbecveh','vadvehxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceveh','tceecveh','vadvehxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbfab','cmbecfab','vadfabxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcefab','tceecfab','vadfabxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbiaa','cmbeciaa','vadiaaxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceiaa','tceeciaa','vadiaaxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbtex','cmbectex','vadtexxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcetex','tceectex','vadtexxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbmnm','cmbecmnm','vadmnmxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcemnm','tceecmnm','vadmnmxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbmpr','cmbecmpr','vadmprxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcempr','tceecmpr','vadmprxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.5 Tertiary sector intensities;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbter','cmbecter','vadterxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceter','tceecter','vadterxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbtercc','cmbectercc','vadterxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcetercc','tceectercc','vadterxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 1.6 Agriculture intensities;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbagr','cmbecagr','vadagrxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceagr','tceecagr','vadagrxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 2 TECHNICO-ECONOMIC RATIOS;
--coment : 2.1 Residential technico-economic ratios;
--coment : Average unit consumption per dwellings;
CALC_INDICATEURS.Calcul_Serie_Part('cicmblog','cmbecres','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcelog','tceecres','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmblogcc','cmbecrescc','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcelogcc','tceecrescc','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmblogchf','cmbecreschf','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcelogchf','tceecreschf','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmblogchc','cmbecreschc','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcelogchc','tceecreschc','nbrlpr',1000,'tCO2/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--coment : 2.2 Transport technico-economic ratios;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbvpc','cmbecvpc','nbrvpc',1,'tCO2/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cmbecvpc' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cicmbvpckm','cicmbvpc','kmvvpc',1000000,'gCO2/km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
ELSE
	cst_travail = const.VALEUR['cst_essco2ccbl']*const.VALEUR['cst_essun']*const.VALEUR['cst_essdn']*const.VALEUR['cst_pcpetoxy']/100*1000

	CALC_INDICATEURS.Produit_Serie_Facteur('cicmbvpcesskm','esscsvpc',cst_travail,'gCO2/km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--esscsvpc*nbrvpcess*cst_essco2ccbl*cst_essun*cst_essdn*cst_pcpetoxy)/100*1000
    
	cst_travail = const.VALEUR['cst_gzlco2ccbl']*const.VALEUR['cst_gzlun']*const.VALEUR['cst_gzldn']*const.VALEUR['cst_pcpetoxy']/100*1000

	CALC_INDICATEURS.Produit_Serie_Facteur('cicmbvpcgzlkm','gzlcsvpc',cst_travail,'gCO2/km',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--((gzlcsvpc*nbrvpcgzl*cst_gzlun*cst_gzlco2ccbl*cst_gzldn*cst_pcpetoxy)/100)*1000

	CALC_INDICATEURS.Calcul_Moy_pond('cicmbvpckm','cicmbvpcesskm','cicmbvpcgzlkm','nbrvpcess','nbrvpcgzl','gCO2/km',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--coment : unit consumption of good transport for road, rail, and water transport;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbmch','cmbecmch','tkm',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcemch','tceecmch','tkm',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbmot','cmbecmot','nbrmot',1,'tCO2/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcemot','tceecmot','nbrmot',1,'tCO2/veh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbfer','cmbecfer','tkbfer',1,'kCO2/tkb',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcefer','tceecfer','tkbfer',1,'kCO2/tkb',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbflv','cmbecflv','tkmflv',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceflv','tceecflv','tkmflv',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='gzleccamvlr' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	--IF pays_cour='dnk' THEN
	--	CALC_INDICATEURS.Calcul_Serie_Part('cigzltgr','gzleccam','tkmrou',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	--ELSE
		CALC_INDICATEURS.Calcul_Serie_Part('cigzltgr','gzleccamvlr','tkmrou',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	--END IF;
ELSE
	CALC_INDICATEURS.Produit_2Series_coeff('gzlechvv','cigzlhvvvkm','vkmcam',0.001,'MtCO2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('cigzltgr','gzlechvv','tkmrou',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_AGREGAT_ENERGIE.Affectation_Serie_ODY('cicmbtgr','cigzltgr','kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--IF pays_cour='dnk' THEN
--	CALC_INDICATEURS.Calcul_Serie_Part('cigzlcamvlr','gzleccam','tkmrou',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('cigzlcamvlr','gzleccamvlr','tkmrou',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--END IF;
--coment : unit consumption per passenger-km;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbvpcpkm','cmbecvpc','pkmvpc',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcevpcpkm','tceecvpc','pkmvpc',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbflvpkm','cmbecflv','pkmflv',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceflvpkm','tceecflv','pkmflv',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbadopkm','carecado','pkmavd',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pctkbferpas','tkbferpas','tkbfer',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('cmbecferpas1','cmbecfer','pctkbferpas',0.01,'MtCO2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pctkbfermch','tkbfermch','tkbfer',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('cmbecfermch','cmbecfer','pctkbfermch',0.01,'MtCO2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('tceecferpas1','tceecfer','pctkbferpas',0.01,'MtCO2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('tceecfermch','tceecfer','pctkbfermch',0.01,'MtCO2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cicmbferpkm','cmbecferpas1','pkmfertot',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceferpkm','tceecferpas1','pkmfertot',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbfertkm','cmbecfermch','tkmfer',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcefertkm','tceecfermch','tkmfer',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='cicmbvpcpkm' AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie='pkmavd' AND code_pays=pays_cour;
	IF (serie_existe>0) THEN
		CALC_INDICATEURS.Calcul_Moy_pond_3arg('cicmbpkm','cicmbvpcpkm','cicmbferpkm','cicmbadopkm','pkmvpc','pkmfertot','pkmavd','kCO2/pkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	ELSE
		CALC_INDICATEURS.Calcul_Moy_pond('cicmbpkm','cicmbvpcpkm','cicmbferpkm','pkmvpc','pkmfertot','kCO2/pkm',pays_cour,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	END IF;
END IF;

CALC_INDICATEURS.Somme_3Series_ODY('cmbecncv','cmbecvpc','cmbecbus','cmbecmot','MtCO2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbroupkm','cmbecncv','pkmrou',1,'kCO2/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);


--coment : 2.3 Industry technico-economic ratios;
--coment : Unit consumption of energy intensive products;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbcim','cmbeccim','prdcim',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcecim','tceeccim','prdcim',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbppp','cmbecppp','prdppp',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceppp','tceecppp','prdppp',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbver','cmbecver','prdver',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcever','tceecver','prdver',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cicmbppp1','cmbecppp','vadpppxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceppp1','tceecppp','vadpppxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cicmbair','petecado','pasair',1000000,'kCO2/pas',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment : 2.4 Tertiary technico-economic ratios;
CALC_INDICATEURS.Calcul_Serie_Part('cicmbterem','cmbecter','empter',1000,'tCO2/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceterem','tceecter','empter',1000,'tCO2/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbteremcc','cmbectercc','empter',1000,'tCO2/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceteremcc','tceectercc','empter',1000,'tCO2/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--coment: CO2 avec donnees inventaire;
CALC_INDICATEURS.Calcul_Serie_Part('cico2totpop','cmbectot','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2cmbpop','cmbectfc','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2tcepop','tceectfc','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2tot','cmbectot','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2cmb','cmbectfc','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2tce','tceectfc','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbnav','cmbecflv','tkmflv',1,'kCO2/tkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbres','cmbecres','cprxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citceres','tceecres','cprxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
IF pays_cour NOT IN ('nor') THEN
	CALC_INDICATEURS.Calcul_Serie_Part('cicmbacb','cmbecsid1','prdacb',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('citceacb','tceecsid1','prdacb',1000,'tCO2/t',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
--coment : CO2 inventaire avec cc;
CALC_INDICATEURS.Calcul_Serie_Part('cico2cmbpopc','cmbectfccc','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2tcepopc','tceectfccc','pop',1000,'tCO2/pop',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2cmbc','cmbectfccc','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cico2tcec','tceectfccc','pibxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cicmbrescc','cmbecrescc','cprxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('citcerescc','tceecrescc','cprxx',1000,'kCO2/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------Calcul : Intensité à structure constante industrie-------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DBMS_OUTPUT.PUT_LINE('Calcul 1 : Intensité à structure constante industrie');

CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindmprsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindchisd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindpppsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindmnmsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindiaasd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindmacsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindvehsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindtexsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocinddvisd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindboisd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindwatsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindconsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocindminsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Aggregat_Secteur_IMA('vitocindimasd','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_3Series_ODY('vitocindsd','vitocindimasd','vitocindconsd','vitocindminsd','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_VITOC_ED('vitocinded',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Cumul('vitocindsdto','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('vitocindedto','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtocindsd',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtocinded',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('vadmprxx','vadmacxx','vadchixx') AND Code_pays=pays_cour AND Temp=temporalisation;
IF serie_existe=3 THEN
	CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocinded','ivtocinded','ietocind',0.01,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocindsd','ivtocindsd','ietocind',0.01,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

DBMS_OUTPUT.PUT_LINE('Début INDIC 9');

--coment : at purchasing power parities;
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocindedpp','ietocinded','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocindsdpp','ietocindsd','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------- AJOUT CALCULS KP / 23-01-2018------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------- Calcul : Intensité finale à structure constante ------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DBMS_OUTPUT.PUT_LINE('Calcul 2 : Intensité finale à structure constante');

--------------------------------------------------------------------------TOTAL-------------------------------------------------------------------------------------------------------------------
--comment : 1.10 Intensity at constant structure

CALC_INDICATEURS.Calcul_VITOC_Branche('vitocpibindsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--remplace vitocindesd
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocpibressd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocpibdvrsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocpibtrasd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--tjs 0 d'après le calcul ln(1)
CALC_INDICATEURS.Calcul_VITOC_Branche('vitocpibagrsd',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_ED_Secteur('vitocpibinded',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_ED_Secteur('vitocpibinded1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('vitocpibindesd','vitocpibinded1','vitocpibinded','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Aggregat_Secteurs_Prim('vitoccfccsd','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--CALC_INDICATEURS.Calcul_VITOC_ED('vitoccfcced',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_ED_Secteur('vitocpibinded',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_ED_Secteur('vitocpibresed',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_ED_Secteur('vitocpibdvred',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_ED_Secteur('vitocpibtraed',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VITOC_ED_Secteur('vitocpibagred',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Aggregat_Secteurs_Prim('vitoccfcced','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Cumul('vitoccfccsdto','1',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('vitoccfccedto','1',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtoccfccsd',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtoccfcced',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('vadmprxx','vadmacxx','vadchixx') AND Code_pays=pays_cour AND Temp=temporalisation;
IF serie_existe=3 THEN
	CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietoccfcced','ivtoccfcced','ietoctfccc',0.01,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietoccfccsd','ivtoccfccsd','ietoctfccc',0.01,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

--comment : at purchasing power parities;
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietoccfccedpp','ietoccfcced','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietoccfccsdpp','ietoccfccsd','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

DBMS_OUTPUT.PUT_LINE('Début INDIC 10');
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------Structure effects -----------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DBMS_OUTPUT.PUT_LINE('Calcul 3 : Structure effect from HOUSEHOLDS');
CALC_INDICATEURS.Calcul_Serie_Cumul('vitocpibressdto','1',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtocpibressd',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocpibressd','ivtocpibressd','ietoctfccc',0.01,'koe/EUR2010',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);

--comment : at purchasing power parities;
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocpibressdpp','ietocpibressd','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);


--------------------------------------------------------------------------INDUSTRY---------------------------------------------------------------------------------------------------------------
DBMS_OUTPUT.PUT_LINE('Calcul 4 : Structure effect in industrial branches');
--Intensity due to variation of intensity: efficiency component
CALC_INDICATEURS.Calcul_Serie_Cumul('vitocpibindesdto','1',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);--remplace vitocindesdto
CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtocpibindesd',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);--remplace ivtocindesd
CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocindesd','ivtocpibindesd','ietoctfccc',0.01,'koe/EUR2010',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);

--comment : at purchasing power parities;
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocindesdpp','ietocindesd','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);


DBMS_OUTPUT.PUT_LINE('Début INDIC 11');
--------------------------------------------------------------------------Other sectors---------------------------------------------------------------------------------------------------------------
DBMS_OUTPUT.PUT_LINE('Calcul 5 : Structure effect from other sectors such services, whole industry and agriculture');

CALC_INDICATEURS.Somme_3Series_ODY('vitoccfccsd1','vitocpibindsd','vitocpibdvrsd','vitocpibagrsd','1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('vitoccfccsd1to','1',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100_EXP('ivtoccfccsd1',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocpibothsd','ivtoccfccsd1','ietoctfccc',0.01,'koe/EUR2010',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);

--comment : at purchasing power parities;
CALC_INDICATEURS.Calcul_Conv_Courant_ppp('ietocpibothsdpp','ietocpibothsd','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

--------------------------------------------------------------------------calculation of GDP structure in tep---------------------------------------------------------------------------------------------------------------
CALC_INDICATEURS.Calcul_Serie_gdpstruct('gdpstruct','toccfcc','ivtoccfccsd1','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

----on retire de l'effet activité calculé dans les feuilles pays l'effet de structure du pib et on l'ajoute à l'effet de structure
CALC_INDICATEURS.Difference_2Series_ODY('actfin1','actfin','gdpstruct','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('structfin1','structfin','gdpstruct','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);


--------------------------------------------------------------------------Final energy intensity without savings---------------------------------------------------------------------------------------------------------------
CALC_INDICATEURS.Calcul_Serie_Cumul('savfincum','Mtoe',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savindcum','Mtoe',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savtracum','Mtoe',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savrescum','Mtoe',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savtercum','Mtoe',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);


CALC_INDICATEURS.Somme_2Series_ODY('toccfccns','toccfcc','savfincum','Mtoe',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctfcccns','toccfccns','pibxx',1000,'koe/EUR2010',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('iietoctfcccns',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietoctfsav','ietoctfccc','iietoctfcccns',100,'koe/EUR2010',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('iietoctfsav',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('iietoccfccsd',v_an_base,pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Produit_2Series_coeff('iietoccfccsdsav','iietoctfsav','iietoccfccsd',0.0001,'koe/EUR2010',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ietoctfoth','ietoctfccc','iietoccfccsdsav',1,'koe/EUR2010',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
--CALC_INDICATEURS.Calcul_Serie_Part('iietoccfccsdsav','iietoccfccsd','iietoctfsav',1,'koe/EUR2010',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);
--CALC_INDICATEURS.Produit_2Series_coeff('ietoctfoth','ietoctfccc','iietoccfccsdsav',1,'koe/EUR2010',pays_cour,2000,annee_finale,temporalisation,Job,Job_Id);

-- Ajout financial indicators 28/07/2021

--CALC_DATA.Affectation_Serie('savrescum','savrescum',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id); -- doublon série calculée précédemment 
--CALC_DATA.Affectation_Serie ('eegres','eegres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id); -- doublon série calculée précédemment 
CALC_DATA.Affectation_Serie ('savresmencumE','savresmencumE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('savtramencumE','savtramencumE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('savmencumE','savmencumE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('denresmenE','denresmenE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('dentramenE','dentramenE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('denmenE','denmenE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcsavdenres','pcsavdenres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcsavdentra','pcsavdentra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcsavden','pcsavden',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcdenrescpr','pcdenrescpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcdentracpr','pcdentracpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcdencpr','pcdencpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcsavrescpr','pcsavrescpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcsavtracpr','pcsavtracpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcsavcpr','pcsavcpr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcdenddw','pcdenddw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
--CALC_DATA.Affectation_Serie ('savindcum','savindcum',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id); -- doublon série calculée précédemment 
--CALC_DATA.Affectation_Serie ('eegind','eegind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id); -- doublon série calculée précédemment 
CALC_DATA.Affectation_Serie ('savindcumE','savindcumE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('denindE','denindE',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('pcsavdenind','pcsavdenind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('vadtocind','vadtocind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie ('vadtocindsav','vadtocindsav',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);


--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------CORRESPOND A LA MACRO INDICODY_NEW_DATA---------------------------------------------------------------------------
/* CALCULS AJOUTES PAR MARC LE 3 Octobre 2016 : Pour DATAMAPPER DE KARINE*/

/* CALCULS */
CALC_DATA.Calcul_Serie_ELE('elecfresels1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfoffsels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Difference_2Series_ODY('ietocimastr','ietocima','ietocimaed','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('ietocimastrp','ietocimapp','ietocimaedpp','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('elecfressm','elecfresels1','elecfreslar','TWh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('ietoctfcstr','ietoctfcstcc','ietoctfccc','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('ietoctfcstrp','ietoctfcstppcc','ietoctfcppcc','koe/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('thrcftercc','toccftercc','elccftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Difference_2Series_ODY('thrcfter','toccfter','elccfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Somme_2Series_ODY('toccfpub','toccffer','toccfbus','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('toccfrester','toccfres','toccfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('toccfrestercc','toccfrescc','toccftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('toccfresterchf','toccfreschf','toccfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('toccfresterchc','toccfreschc','toccfterchc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('elccfrester','elccfres','elccfter','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('elccfrestercc','elccfrescc','elccftercc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('elccfresterchf','elccfreschf','elccfterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('elccfresterchc','elccfreschc','elccfterchc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('surrester','surres','surter','Mm2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('toccfrester','toccfresterchf') AND Code_pays=pays_cour AND Temp=temporalisation;
IF serie_existe=2 THEN
	CALC_INDICATEURS.Difference_2Series_ODY('toccfresteroth','toccfrester','toccfresterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('toccfrestercc','toccfresterchc') AND Code_pays=pays_cour AND Temp=temporalisation;
IF serie_existe=2 THEN
	CALC_INDICATEURS.Difference_2Series_ODY('toccfresterccoth','toccfrestercc','toccfresterchc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('elccfrester','elccfresterchf') AND Code_pays=pays_cour AND Temp=temporalisation;
IF serie_existe=2 THEN
	CALC_INDICATEURS.Difference_2Series_ODY('elccfresteroth','elccfrester','elccfresterchf','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;
SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('elccfrestercc','elccfresterchc') AND Code_pays=pays_cour AND Temp=temporalisation;
IF serie_existe=2 THEN
	CALC_INDICATEURS.Difference_2Series_ODY('elccfresterccoth','elccfrestercc','elccfresterchc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
END IF;

CALC_INDICATEURS.Calcul_Serie_Part('shacbele','prdacbele','prdacb',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shpatppp','prdpat','prdppp',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--remplace shppp déjà utilisé
CALC_INDICATEURS.Calcul_Serie_Part('shco2ina','cmbecind','tceecind',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shtra','toccftra','toccf',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shelctra','elccftra','toccftra',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('nbcarpop','nbrvpc','pop',1000000,'car/kcap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuvpcpop','toccfvpc','pop',1000,'toe/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('tkmpin','tkm','pibxxppp',1000,'tkm/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('tucamvlr','tkmrou','nbrcamvlr',1,'tkm/kveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--tucamvlr remplace shtkmcamvlr
CALC_INDICATEURS.Calcul_Serie_Part('tkmpibppp','tkm','pibxxppp',1000,'tkm/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pkmpibppp','pkm','pibxxppp',1000,'pkm/EUR2010p',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocpub','toccfpub','pkmpub',1,'koe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shdj','dj','djref',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shreschc','toccfreschc','toccfrescc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shrescui','toccfrescui','toccfrescc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shresecs','toccfresecs','toccfrescc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shrescli','toccfrescli','toccfrescc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shresels','elccfresels','toccfrescc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shresels1','elccfresels1','toccfrescc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shreslgt','elccfreslgt','toccfrescc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogels1','elecfresels1','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoclogsm','elecfressm','nbrlpr',1000000,'kWh/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcscl','nbrscl','nbrlpr',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pclvv','nbrlvv','nbrlpr',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcrfg','nbrrfg','nbrlpr',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pclvl','nbrlvl','nbrlpr',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pccgl','nbrcgl','nbrlpr',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pctvs','nbrtvs','nbrlpr',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shterthermcc','elecftercc','empter',1000000,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shtertherm','elecfter','empter',1000000,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shteroffels','elecfoffsels','empter',1000000,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shelcter','elccfter','toccfter',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('shelcterc','elccftercc','toccftercc',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

cst_travail = 1000000/const.VALEUR['cst_elcun']
CALC_INDICATEURS.Calcul_Serie_Part('cutochoswh','toccfhos','emphos',cst_travail,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccomwh','toccfcom','empcom',cst_travail,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutochcrwh','toccfhcr','emphcr',cst_travail,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoceduwh','toccfedu','empedu',cst_travail,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocbupwh','toccfbup','empbup',cst_travail,'kWh/emp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

cst_travail = 1000/const.VALEUR['cst_elcun']
CALC_INDICATEURS.Calcul_Serie_Part('cutochosm2wh','toccfhos','surhos',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutoccomm2wh','toccfcom','surcom',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocchcrm2wh','toccfhcr','surhcr',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocedum2wh','toccfedu','suredu',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocbupm2wh','toccfbup','surbup',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurrester','toccfrester','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurrestercc','toccfrestercc','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurresterchf','toccfresterchf','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurresterchc','toccfresterchc','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcsurrester','elccfrester','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcsurrestercc','elccfrestercc','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcsurresterchf','elccfresterchf','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcsurresterchc','elccfresterchc','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurresteroth','toccfresteroth','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cutocsurresterothcc','toccfresterccoth','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcsurresteroth','elccfresteroth','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('cuelcsurresterothcc','elccfresterccoth','surrester',cst_travail,'kWh/m2',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('ietocpow','conspow','pibxx',1000,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VARIETOCXXX('ietocpow',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VARIETOCXXX('ietoctpc',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_VARIETOCXXX('ietoctfc',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietocpow1','varietocpow','ietoctpc',1,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietoccf1','varietoccf','ietoctpc',1,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Produit_AnneeBase('ietoccp1','varietoccp','ietoctpc',1,'koe/EUR2010',v_an_base,pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('iietoccf1',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Indice100('iietocpow1',v_an_base,pays_cour,v_an_base,annee_finale,temporalisation,Job,Job_Id);

SELECT COUNT(DISTINCT(code_serie)) INTO serie_existe FROM Series WHERE code_serie IN ('iietoccf1','iietocpow1') AND code_pays=pays_cour;
IF (serie_existe>0) THEN
	CALC_INDICATEURS.Calcul_Serie_Part('ietocoth2','ietoctpc','iietoccf1',100,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	CALC_INDICATEURS.Calcul_Serie_Part('ietocoth2','ietocoth2','iietocpow1',100,'koe/EUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
	SELECT COUNT(DISTINCT(source)) INTO serie_existe FROM Series WHERE code_serie IN ('ietocoth2') AND code_pays=pays_cour;
	IF (serie_existe>1) THEN
		DELETE valeurs_tab WHERE TICKER IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='ietocoth2' AND source NOT IN ('ODYSSEE'));
		DELETE sources_series WHERE SS_NUMERO IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='ietocoth2' AND source NOT IN ('ODYSSEE'));
		DELETE ser_projet WHERE I_SERPROJET IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='ietocoth2' AND source NOT IN ('ODYSSEE'));
		DELETE equations WHERE numero IN (SELECT numero FROM Series WHERE code_pays=pays_cour AND code_serie='ietocoth2' AND source NOT IN ('ODYSSEE'));
		DELETE Series WHERE code_serie='ietocoth2' AND code_pays=pays_cour AND source NOT IN ('ODYSSEE');
	END IF;
END IF;
--calcul_series('othcftra=toccftra-toccfrou-toccffer-carcfair-toccfflv');
--calcul_series('shteruses=((toccfterchc+toccfterecs+toccftercui)/cst_elcun)/empter*1000*1000');

-- IF pays_cour='fin' THEN
	-- CALC_INDICATEURS.Calcul_Serie_Part('surlogpop','surreshpc','pop',1000,'m2/hab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--hors parties communes
-- ELSE
	CALC_INDICATEURS.Calcul_Serie_Part('surlogpop','surres','pop',1000,'m2/hab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--hors parties communes (sauf fin, décommenter la condition quand validé par EED)
-- END IF;

CALC_INDICATEURS.Calcul_Serie_Part('pctkmflv','tkmflv','tkm',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pctkmfer','tkmfer','tkm',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('pctkmferflv','pctkmfer','pctkmflv','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcpkmpubbus','pkmbus','pkmter',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcpkmpubfer','pkmfer','pkmter',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcpkmpubfermet','pkmfermet','pkmter',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pkmferpop','pkmfer','pop',1000000,'km/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pkmfermetpop','pkmfermet','pop',1000000,'km/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie('odexchi','odexchi',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexsid','odexsid',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexcim','odexcim',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexppp','odexppp',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexiaa','odexiaa',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexmac','odexmac',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexveh','odexveh',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexcar','odexcar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexcamvlr','odexcamvlr',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexbus','odexbus',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexrail','odexrail',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexflv','odexflv',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexair','odexair',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savbustech','savbustech',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savferpastech','savferpastech',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savairtech','savairtech',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savcamvlrtech','savcamvlrtech',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savfermchtech','savfermchtech',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savwattech','savwattech',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('brent','brent',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('impprxgaz','impprxgaz',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('impprxcoal','impprxcoal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('indexbrent','indexbrent',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('indeximpprxgaz','indeximpprxgaz',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('indeximpprxcoal','indeximpprxcoal',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxtra','prxtra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxres','prxres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxind','prxind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('indexprxtra','indexprxtra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('indexprxres','indexprxres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('indexprxind','indexprxind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('indexprxavg','indexprxavg',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxessxx','prxessxx',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('prxgzlxx','prxgzlxx',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pkmpop','pkm','pop',1000000,'km/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pkmbuspop','pkmbus','pop',1000000,'km/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pkmbusferpop','pkmpub','pop',1000000,'km/cap',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pcencind','enccfind','toccfind',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcenctra','enccftra','toccftra',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcencres','enccfres','toccfres',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcencter','enccfter','toccfter',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcencagr','enccfagr','toccfagr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie('pelletboilsale','pelletboilsale',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pelletstovesale','pelletstovesale',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pelletboilstock','pelletboilstock',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('pelletstovestock','pelletstovestock',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie('nbrsmart','nbrsmart',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('salsmart','salsmart',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Calcul_Serie_ELE('elecftra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecfind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Calcul_Serie_ELE('elecf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeletra','elecftra','pibxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeleind','elecfind','vadindxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('ieeletfc','elecf','pibxx',1000000,'kWh/kEUR2010',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutoclogelst','elccfresels','nbrlpr',1000,'toe/dw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pcindmpr','ietocmpr','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcindchi','ietocchi','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcindiaa','ietociaa','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcindtex','ietoctex','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcindmac','ietocmac','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcindveh','ietocveh','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcindmnm','ietocmnm','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcindppp','ietocppp','ietocmac',1,'1',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Aggregat_Secteurs_Prim('savfinairexc','Mtoe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savfinairexccum1','Mtoe',pays_cour,2007,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savfincum1','Mtoe',pays_cour,2007,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savindcum1','Mtoe',pays_cour,2007,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savrescum1','Mtoe',pays_cour,2007,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savtracum1','Mtoe',pays_cour,2007,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savtratotcum1','Mtoe',pays_cour,2007,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savtercum1','Mtoe',pays_cour,2007,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Cumul('savfinairexccum3','Mtoe',pays_cour,2014,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savfincum3','Mtoe',pays_cour,2014,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savfinairexccum4','Mtoe',pays_cour,2014,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Cumul('savfincum4','Mtoe',pays_cour,2014,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('cutocvpcpkm1','toccfvpc','pkmvpc',1000,'goe/pkm',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pcroutra','toccfrou','toccftra',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('shpatpap','prdpat','prdpap',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie('savgrossfin','savgrossfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrossfin','othgrossfin',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrosstratot','savgrosstratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrosstratot','othgrosstratot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrosstra','savgrosstra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrosstra','othgrosstra',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrosspasstot','savgrosspasstot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrosspasstot','othgrosspasstot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrosspass','savgrosspass',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrosspass','othgrosspass',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrossgoods','savgrossgoods',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrossgoods','othgrossgoods',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrosscar','savgrosscar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrosscar','othgrosscar',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrossres','savgrossres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrossres','othgrossres',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrosschf','savgrosschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrosschf','othgrosschf',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrosster','savgrosster',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrosster','othgrosster',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrossind','savgrossind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrossind','othgrossind',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_DATA.Affectation_Serie('actresels','actresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrossresels','savgrossresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othresels','othresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrossresels','othgrossresels',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consfintot','consfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsfintot','varconsfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('consfin2tot','consfin2tot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('varconsfin2tot','varconsfin2tot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('actfintot','actfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('structfintot','structfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savgrossfintot','savgrossfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('savfintot','savfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('climfintot','climfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othfintot','othfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('othgrossfintot','othgrossfintot',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexreslgt','odexreslgt',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexrescli','odexrescli',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexreschfobs','odexreschfobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexresecsobs','odexresecsobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexrescuiobs','odexrescuiobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexreselsobs','odexreselsobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexreslgtobs','odexreslgtobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_DATA.Affectation_Serie('odexrescliobs','odexrescliobs',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);




/*CALCULS AJOUTES APRES GENERATION DES SERIES*/

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------CORRESPOND A LA MACRO INDICODY_Pour_GRAPH.------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
/* ======== AJOUT CALCUL TCAM PERIODE 14/02/2017 ====== */
/*
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcp1','ietoctfc','koe/EUR2010',pays_cour,v_an_base,2007);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcccp1','ietoctfccc','koe/EUR2010',pays_cour,v_an_base,2007);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcstp1','ietoctfcst','koe/EUR2010',pays_cour,v_an_base,2007);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcstccp1','ietoctfcstcc','koe/EUR2010',pays_cour,v_an_base,2007);

CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcp2','ietoctfc','koe/EUR2010',pays_cour,2007,2014);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcccp2','ietoctfccc','koe/EUR2010',pays_cour,2007,2014);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcstp2','ietoctfcst','koe/EUR2010',pays_cour,2007,2014);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcstccp2','ietoctfcstcc','koe/EUR2010',pays_cour,2007,2014);

CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcp3','ietoctfc','koe/EUR2010',pays_cour,v_an_base,2014);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcccp3','ietoctfccc','koe/EUR2010',pays_cour,v_an_base,2014);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcstp3','ietoctfcst','koe/EUR2010',pays_cour,v_an_base,2014);
CALC_INDICATEURS.CALCUL_TCAM_PERIODE('tcietoctfcstccp3','ietoctfcstcc','koe/EUR2010',pays_cour,v_an_base,2014);

selection_series_source('tcietoctfcp1',pays_cour,'%');
selection_series_source('tcietoctfcccp1',pays_cour,'%');
selection_series_source('tcietoctfcstp1',pays_cour,'%');
selection_series_source('tcietoctfcstccp1',pays_cour,'%');

selection_series_source('tcietoctfcp2',pays_cour,'%');
selection_series_source('tcietoctfcccp2',pays_cour,'%');
selection_series_source('tcietoctfcstp2',pays_cour,'%');
selection_series_source('tcietoctfcstccp2',pays_cour,'%');

selection_series_source('tcietoctfcp3',pays_cour,'%');
selection_series_source('tcietoctfcccp3',pays_cour,'%');
selection_series_source('tcietoctfcstp3',pays_cour,'%');
selection_series_source('tcietoctfcstccp3',pays_cour,'%');

calcul_series('tcietoctfcrp1=tcietoctfcp1-tcietoctfcstp1');
calcul_series('tcietoctfcccrp1=tcietoctfcccp1-tcietoctfcccstp1');

calcul_series('tcietoctfcrp2=tcietoctfcp2-tcietoctfcstp2');
calcul_series('tcietoctfcccrp2=tcietoctfcccp2-tcietoctfcccstp2');

calcul_series('tcietoctfcrp3=tcietoctfcp3-tcietoctfcstp3');
calcul_series('tcietoctfcccrp3=tcietoctfcccp3-tcietoctfcccstp3');

generation_series('tcietoctfcrp1',pays_cour,'%');
generation_series('tcietoctfcccrp1',pays_cour,'%');
generation_series('tcietoctfcrp2',pays_cour,'%');
generation_series('tcietoctfcccrp2',pays_cour,'%');
generation_series('tcietoctfcrp3',pays_cour,'%');
generation_series('tcietoctfcccrp3',pays_cour,'%');

*/
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------

-- Séries ajoutées de TOOLODY

CALC_INDICATEURS.Calcul_Serie_Part('pcnbrvpcgna','nbrvpcgnabis','nbrvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcnbrvpcele','nbrvpcelebis','nbrvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcnbrvpcflex','nbrvpcflexbis','nbrvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcnbrvpchyb','nbrvpchybbis','nbrvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('pcnbrvpcelehyb','pcnbrvpcele','pcnbrvpchyb','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_3Series_ODY('pcnbrvpcalter','pcnbrvpcelehyb','pcnbrvpcflex','pcnbrvpcgna','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcnewvpcgna','newvpcgnabis','newvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcnewvpcele','newvpcelebis','newvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcnewvpcflex','newvpcflexbis','newvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcnewvpchyb','newvpchybbis','newvpcbis',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('pcnewvpcelehyb','pcnewvpcele','pcnewvpchyb','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_3Series_ODY('pcnewvpcalter','pcnewvpcelehyb','pcnewvpcflex','pcnewvpcgna','%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Somme_2Series_ODY('salpellet','pelletboilsalebis','pelletstovesalebis','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Somme_2Series_ODY('nbrpellet','pelletboilstockbis','pelletstovestockbis','k',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('teqpelletboil','pelletboilstockbis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqpelletstove','pelletstovestockbis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqpellet','nbrpellet','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqsalpelletboil','pelletboilsalebis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqsalpelletstove','pelletstovesalebis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqsalpellet','salpellet','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pcdwhp','nbrhpbis','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcdwhpeff','nbrhpeffbis','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);--nbrhpeff remplace nbrhighheatp et sthpeff, pcdwhpeff remplace nbrpcheatp
CALC_INDICATEURS.Calcul_Serie_Part('pcdwhpren','nbrhprenbis','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcdwhpgeo','nbrhpgeobis','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('teqsalhp','salhpbis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqsalhpren','salhprenbis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqsalhpeff','salhpeffbis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqsalhpgeo','salhpgeobis','nbrlpr',1000,'unit/kdw',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('solm2pop','solm2bis','popbis',1,'m2/hab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('teqsalsolm2','solm2anbis','popbis',1000,'m2/khab',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('nbrdwsol','solm2bis','colm2',1,'kdwe',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_INDICATEURS.Calcul_Serie_Part('pcdwsol','nbrdwsol','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);

CALC_INDICATEURS.Calcul_Serie_Part('pcdwsmart','nbrsmartbis','nbrlpr',100,'%',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);




-- Séries ODYSEC "oubliées"

CALC_ECO.Calcul_Serie_Base('vadcomxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadburxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadbupxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadhcrxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadgovxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadeduxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vadhosxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Serie_Base('vaddivxx','txchgeuro','MEUR2010',pays_cour,2010,annee_initiale,annee_finale,temporalisation,Job,Job_Id);




CALC_ECO.Calcul_Series_LC_EURO('pib','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('cpr','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadagr','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadboi','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadchi','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadcmp','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadcon','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadegw','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadfab','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadiaa','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadidv','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadind','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmac','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadman','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmin','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmnm','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadmpr','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadpap','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadppp','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadref','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadter','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadtex','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadveh','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadidc','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);
CALC_ECO.Calcul_Series_LC_EURO('vadeqp','txchgeuro','MEUR',pays_cour,annee_initiale,annee_finale,temporalisation,Job,Job_Id);